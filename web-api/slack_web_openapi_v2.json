{
    "info": {
        "version": "1.0.0",
        "description": "One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.",
        "title": "Slack Web API"
    },
    "paths": {
        "/chat.delete": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "message_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "ts": "1401383885.000061",
                                "channel": "C024BE91L"
                            }
                        }
                    }
                },
                "description": "Deletes a message.",
                "parameters": [
                    {
                        "description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
                        "type": "boolean",
                        "name": "as_user",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `chat:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Timestamp of the message to be deleted.",
                        "type": "number",
                        "name": "ts",
                        "in": "formData"
                    },
                    {
                        "description": "Channel containing the message to be deleted.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "chat"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "chat:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/chat.delete",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "chat_delete"
            }
        },
        "/files.comments.edit": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response files.comments.edit method",
                            "title": "files.comments.edit error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "cant_edit",
                                        "comment_not_found",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Standard failure response when used with an invalid token",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response files.comments.edit method",
                            "title": "files.comments.edit schema",
                            "required": [
                                "ok",
                                "comment"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "$ref": "#/definitions/objs_comment"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard success response when used with a user token",
                        "examples": {
                            "application/json": {
                                "user_id": "W12345678",
                                "url": "https://subarachnoid.slack.com/",
                                "team_id": "T12345678",
                                "user": "grace",
                                "team": "Subarachnoid Workspace",
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Edit an existing file comment.",
                "parameters": [
                    {
                        "description": "Text of the comment to edit.",
                        "type": "string",
                        "name": "comment",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `files:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The comment to edit.",
                        "type": "string",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "description": "File containing the comment to edit.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "files.comments",
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.comments.edit",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "files_comments_edit"
            }
        },
        "/im.close": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Close a direct message channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `im:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Direct message channel to close.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "im"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "im:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/im.close",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "im_close"
            }
        },
        "/groups.replies": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Retrieve a thread of messages posted to a private channel",
                "parameters": [
                    {
                        "description": "Unique identifier of a thread's parent message",
                        "type": "number",
                        "name": "thread_ts",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `groups:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Private channel to fetch thread from",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.replies",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "groups_replies"
            }
        },
        "/bots.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "When no bot can be found, it returns an error.",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "bot_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "When successful, returns bot info by ID.",
                        "examples": {
                            "application/json": {
                                "bot": {
                                    "updated": 1449272004,
                                    "name": "commandeer",
                                    "icons": {
                                        "image_36": "https://...",
                                        "image_48": "https://...",
                                        "image_72": "https://..."
                                    },
                                    "deleted": false,
                                    "app_id": "A061BLERW",
                                    "id": "B061F7JQ1"
                                },
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets information about a bot user.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `users:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Bot user to get info on",
                        "type": "string",
                        "name": "bot",
                        "in": "query"
                    }
                ],
                "tags": [
                    "bots"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/bots.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "bots_info"
            }
        },
        "/groups.rename": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Renames a private channel.",
                "parameters": [
                    {
                        "description": "Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.",
                        "type": "boolean",
                        "name": "validate",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "New name for private channel.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "description": "Private channel to rename",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.rename",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_rename"
            }
        },
        "/users.profile.set": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_profile"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "profile": {
                                    "display_name": "spengler",
                                    "status_emoji": ":books:",
                                    "team": "T012AB3C4",
                                    "real_name": "Egon Spengler",
                                    "image_24": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "real_name_normalized": "Egon Spengler",
                                    "image_512": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "display_name_normalized": "spengler",
                                    "image_32": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "image_48": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "image_72": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "avatar_hash": "ge3b51ca72de",
                                    "status_text": "Print is dead",
                                    "email": "spengler@ghostbusters.example.com",
                                    "image_192": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg"
                                },
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Set the profile information for a user.",
                "parameters": [
                    {
                        "description": "Collection of key:value pairs presented as a URL-encoded JSON hash.",
                        "type": "string",
                        "name": "profile",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `users.profile:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "ID of user to change. This argument may only be specified by team admins on paid teams.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "Value to set a single key to. Usable only if `profile` is not passed.",
                        "type": "string",
                        "name": "value",
                        "in": "formData"
                    },
                    {
                        "description": "Name of a single key to set. Usable only if `profile` is not passed.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "users.profile",
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users.profile:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.profile.set",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "users_profile_set"
            }
        },
        "/users.setPresence": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Manually sets user presence.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `users:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Either `auto` or `away`",
                        "type": "string",
                        "name": "presence",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.setPresence",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "users_setPresence"
            }
        },
        "/conversations.close": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.close method",
                            "title": "conversations.close error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "channel_not_found",
                                        "user_does_not_own_channel",
                                        "missing_scope",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response conversations.close method",
                            "title": "conversations.close success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "no_op": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "already_closed": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Closes a direct message or multi-person direct message.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Conversation to close.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.close",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_close"
            }
        },
        "/im.open": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from im.open method",
                            "title": "im.open error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "user_not_found",
                                        "user_not_visible",
                                        "user_disabled",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "no_permission",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from im.open method",
                            "title": "im.open success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "no_op": {
                                    "type": "boolean"
                                },
                                "already_open": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "additionalProperties": true,
                                    "required": [
                                        "id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "last_read": {
                                            "$ref": "#/definitions/defs_ts"
                                        },
                                        "created": {
                                            "type": "string"
                                        },
                                        "unread_count": {
                                            "type": "number"
                                        },
                                        "is_open": {
                                            "type": "boolean"
                                        },
                                        "user": {
                                            "$ref": "#/definitions/defs_user"
                                        },
                                        "unread_count_display": {
                                            "type": "number"
                                        },
                                        "is_im": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "$ref": "#/definitions/defs_dm_id"
                                        },
                                        "latest": {
                                            "$ref": "#/definitions/objs_message"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Opens a direct message channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `im:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Boolean, indicates you want the full IM channel definition in the response.",
                        "type": "boolean",
                        "name": "return_im",
                        "in": "formData"
                    },
                    {
                        "description": "User to open a direct message channel with.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "Set this to `true` to receive the locale for this im. Defaults to `false`",
                        "type": "boolean",
                        "name": "include_locale",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "im"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "im:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/im.open",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "im_open"
            }
        },
        "/groups.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response groups.list method",
                            "title": "groups.list error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response groups.list method",
                            "title": "groups.list success schema",
                            "required": [
                                "ok",
                                "groups"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "groups": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/objs_group"
                                    }
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists private channels that the calling user has access to.",
                "parameters": [
                    {
                        "description": "Exclude the `members` from each `group`",
                        "type": "boolean",
                        "name": "exclude_members",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `groups:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Don't return archived private channels.",
                        "type": "boolean",
                        "name": "exclude_archived",
                        "in": "query"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "groups_list"
            }
        },
        "/team.integrationLogs": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets the integration logs for the current team.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Filter logs with this change type. Defaults to all logs.",
                        "type": "string",
                        "name": "change_type",
                        "in": "query"
                    },
                    {
                        "description": "Filter logs to this Slack app. Defaults to all logs.",
                        "type": "integer",
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `admin`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Filter logs generated by this user\u2019s actions. Defaults to all logs.",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "description": "Filter logs to this service. Defaults to all logs.",
                        "type": "integer",
                        "name": "service_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "tags": [
                    "team"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "admin"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/team.integrationLogs",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "team_integrationLogs"
            }
        },
        "/groups.kick": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Removes a user from a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "User to remove from private channel.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "Private channel to remove user from.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.kick",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_kick"
            }
        },
        "/dnd.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Retrieves a user's current Do Not Disturb status.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `dnd:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "User to fetch status for (defaults to current user)",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "tags": [
                    "dnd"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "dnd:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/dnd.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "dnd_info"
            }
        },
        "/channels.archive": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response channels.archive method",
                            "title": "channels.archive error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "already_archived",
                                        "cant_archive_general",
                                        "restricted_action",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from channels.archive method",
                            "title": "channels.archive success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Archives a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel to archive",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.archive",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_archive"
            }
        },
        "/reminders.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets information about a reminder.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `reminders:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "The ID of the reminder",
                        "type": "string",
                        "name": "reminder",
                        "in": "query"
                    }
                ],
                "tags": [
                    "reminders"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reminders:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reminders.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "reminders_info"
            }
        },
        "/channels.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response channels.info method",
                            "title": "channels.info error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Error response when the specified channel cannot be found",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response channels.info method",
                            "title": "channels.info success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_channel"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "topic": {
                                        "last_set": 1503435128,
                                        "value": "Spiritual containment strategies",
                                        "creator": "U0G9QF9C6"
                                    },
                                    "is_general": false,
                                    "name_normalized": "busting",
                                    "name": "busting",
                                    "is_channel": true,
                                    "created": 1466025154,
                                    "is_member": true,
                                    "is_mpim": false,
                                    "is_archived": false,
                                    "creator": "U0G9QF9C6",
                                    "is_org_shared": false,
                                    "unread_count": 1,
                                    "previous_names": [
                                        "dusting"
                                    ],
                                    "purpose": {
                                        "last_set": 1503435128,
                                        "value": "Discuss busting ghosts",
                                        "creator": "U0G9QF9C6"
                                    },
                                    "unread_count_display": 1,
                                    "last_read": "1503435939.000101",
                                    "latest": {
                                        "username": "ecto1138",
                                        "attachments": [
                                            {
                                                "text": "Don't get too attached",
                                                "fallback": "This is an attachment fallback",
                                                "id": 1
                                            }
                                        ],
                                        "text": "Containment unit is 98% full",
                                        "ts": "1503435956.000247",
                                        "subtype": "bot_message",
                                        "type": "message",
                                        "bot_id": "B19LU7CSY"
                                    },
                                    "members": [
                                        "U0G9QF9C6",
                                        "U1QNSQB9U"
                                    ],
                                    "id": "C1H9RESGL",
                                    "is_private": false,
                                    "is_shared": false
                                }
                            }
                        }
                    }
                },
                "description": "Gets information about a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Set this to `true` to receive the locale for this channel. Defaults to `false`",
                        "type": "boolean",
                        "name": "include_locale",
                        "in": "query"
                    },
                    {
                        "description": "Channel to get info on",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "channels_info"
            }
        },
        "/channels.kick": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "not_in_channel"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Removes a user from a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "User to remove from channel.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "Channel to remove user from.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.kick",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_kick"
            }
        },
        "/groups.mark": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from groups.mark method",
                            "title": "groups.mark error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "invalid_timestamp",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from groups.mark method",
                            "title": "groups.mark success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the read cursor in a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Timestamp of the most recently seen message.",
                        "type": "number",
                        "name": "ts",
                        "in": "formData"
                    },
                    {
                        "description": "Private channel to set reading cursor in.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.mark",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_mark"
            }
        },
        "/mpim.close": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Closes a multiparty direct message channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `mpim:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "MPIM to close.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "mpim"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/mpim.close",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "mpim_close"
            }
        },
        "/conversations.join": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.join method",
                            "title": "conversations.join error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "is_archived",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response if the conversation is archived and cannot be joined",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "is_archived"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.join method",
                            "title": "conversations.join success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "warning": {
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                },
                                "response_metadata": {
                                    "type": "object",
                                    "properties": {
                                        "warnings": {
                                            "minItems": 1,
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "title": "Response metadata"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "warning": "already_in_channel",
                                "ok": true,
                                "response_metadata": {
                                    "warnings": [
                                        "already_in_channel"
                                    ]
                                },
                                "channel": {
                                    "is_general": true,
                                    "name_normalized": "general",
                                    "is_channel": true,
                                    "creator": "U061F7AUR",
                                    "is_member": true,
                                    "is_archived": false,
                                    "topic": {
                                        "last_set": 0,
                                        "value": "Which widget do you worry about?",
                                        "creator": ""
                                    },
                                    "is_im": false,
                                    "is_ext_shared": false,
                                    "previous_names": [],
                                    "id": "C061EG9SL",
                                    "is_org_shared": false,
                                    "is_pending_ext_shared": false,
                                    "is_mpim": false,
                                    "is_group": false,
                                    "purpose": {
                                        "last_set": 0,
                                        "value": "For widget discussion",
                                        "creator": ""
                                    },
                                    "is_private": false,
                                    "is_shared": false,
                                    "name": "general",
                                    "created": 1449252889,
                                    "pending_shared": [],
                                    "unlinked": 0
                                }
                            }
                        }
                    }
                },
                "description": "Joins an existing conversation.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "ID of conversation to join",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.join",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_join"
            }
        },
        "/channels.history": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response channels.history method",
                            "title": "channels.history error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "invalid_ts_latest",
                                        "invalid_ts_oldest",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Error response when the specified channel cannot be found",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response channels.history method",
                            "title": "channels.history success schema",
                            "required": [
                                "ok",
                                "messages",
                                "has_more"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "has_more": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "messages": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/objs_message"
                                    }
                                }
                            }
                        },
                        "description": "Typical success response containing the channel's history",
                        "examples": {
                            "application/json": {
                                "has_more": false,
                                "messages": [
                                    {
                                        "text": "Hello",
                                        "type": "message",
                                        "ts": "1358546515.000008",
                                        "user": "U2147483896"
                                    },
                                    {
                                        "reactions": [
                                            {
                                                "count": 3,
                                                "name": "space_invader",
                                                "users": [
                                                    "U1",
                                                    "U2",
                                                    "U3"
                                                ]
                                            },
                                            {
                                                "count": 5,
                                                "name": "sweet_potato",
                                                "users": [
                                                    "U1",
                                                    "U2",
                                                    "U3",
                                                    "U4",
                                                    "U5"
                                                ]
                                            }
                                        ],
                                        "text": "World",
                                        "ts": "1358546515.000007",
                                        "user": "U2147483896",
                                        "is_starred": true,
                                        "type": "message"
                                    },
                                    {
                                        "wibblr": true,
                                        "type": "something_else",
                                        "ts": "1358546515.000007"
                                    },
                                    {
                                        "username": "ecto1138",
                                        "attachments": [
                                            {
                                                "text": "Don't get too attached",
                                                "fallback": "This is an attachment fallback",
                                                "id": 1
                                            }
                                        ],
                                        "text": "Containment unit is 98% full",
                                        "ts": "1503435956.000247",
                                        "subtype": "bot_message",
                                        "type": "message",
                                        "bot_id": "B19LU7CSY"
                                    }
                                ],
                                "ok": true,
                                "latest": "1358547726.000003"
                            }
                        }
                    }
                },
                "description": "Fetches history of messages and events from a channel.",
                "parameters": [
                    {
                        "description": "Number of messages to return, between 1 and 1000.",
                        "type": "integer",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Include `unread_count_display` in the output?",
                        "type": "boolean",
                        "name": "unreads",
                        "in": "query"
                    },
                    {
                        "description": "Include messages with latest or oldest timestamp in results.",
                        "type": "boolean",
                        "name": "inclusive",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `channels:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Start of time range of messages to include in results.",
                        "type": "number",
                        "name": "oldest",
                        "in": "query"
                    },
                    {
                        "description": "Channel to fetch history for.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    },
                    {
                        "description": "End of time range of messages to include in results.",
                        "type": "number",
                        "name": "latest",
                        "in": "query"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.history",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "channels_history"
            }
        },
        "/im.mark": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response im.mark method",
                            "title": "im.mark error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "invalid_timestamp",
                                        "not_in_channel",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response im.mark method",
                            "title": "im.mark success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the read cursor in a direct message channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `im:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Timestamp of the most recently seen message.",
                        "type": "number",
                        "name": "ts",
                        "in": "formData"
                    },
                    {
                        "description": "Direct message channel to set reading cursor in.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "im"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "im:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/im.mark",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "im_mark"
            }
        },
        "/oauth.token": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Exchanges a temporary OAuth verifier code for a workspace token.",
                "parameters": [
                    {
                        "description": "Issued when you created your application.",
                        "type": "string",
                        "name": "client_secret",
                        "in": "query"
                    },
                    {
                        "description": "The `code` param returned via the OAuth callback.",
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "description": "Request the user to add your app only to a single channel.",
                        "type": "boolean",
                        "name": "single_channel",
                        "in": "query"
                    },
                    {
                        "description": "Issued when you created your application.",
                        "type": "string",
                        "name": "client_id",
                        "in": "query"
                    },
                    {
                        "description": "This must match the originally submitted URI (if one was sent).",
                        "type": "string",
                        "name": "redirect_uri",
                        "in": "query"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/oauth.token",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "oauth_token"
            }
        },
        "/files.upload": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Uploads or creates a file.",
                "parameters": [
                    {
                        "description": "Comma-separated list of channel names or IDs where the file will be shared.",
                        "type": "string",
                        "name": "channels",
                        "in": "formData"
                    },
                    {
                        "description": "Title of file.",
                        "type": "string",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "description": "Initial comment to add to file.",
                        "type": "string",
                        "name": "initial_comment",
                        "in": "formData"
                    },
                    {
                        "description": "A [file type](/types/file#file_types) identifier.",
                        "type": "string",
                        "name": "filetype",
                        "in": "formData"
                    },
                    {
                        "description": "Filename of file.",
                        "type": "string",
                        "name": "filename",
                        "in": "formData"
                    },
                    {
                        "description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`.",
                        "type": "string",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `files:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "formData"
                    },
                    {
                        "description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.upload",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "files_upload"
            }
        },
        "/usergroups.users.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard failure response when used with an invalid token",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard success response when used with a user token",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "users": [
                                    "U060R4BJ4",
                                    "W123A4BC5"
                                ]
                            }
                        }
                    }
                },
                "description": "List all users in a User Group",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `usergroups:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Allow results that involve disabled User Groups.",
                        "type": "boolean",
                        "name": "include_disabled",
                        "in": "query"
                    },
                    {
                        "description": "The encoded ID of the User Group to update.",
                        "type": "string",
                        "name": "usergroup",
                        "in": "query"
                    }
                ],
                "tags": [
                    "usergroups.users",
                    "usergroups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "usergroups:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/usergroups.users.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "usergroups_users_list"
            }
        },
        "/users.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from users.info method",
                            "title": "users.info error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "user_not_found",
                                        "user_not_visible",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "user_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from users.info method",
                            "title": "users.info success schema",
                            "required": [
                                "ok",
                                "user"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "user": {
                                    "additionalProperties": true,
                                    "required": [
                                        "id",
                                        "team_id",
                                        "name",
                                        "deleted",
                                        "color",
                                        "real_name",
                                        "tz",
                                        "tz_label",
                                        "tz_offset",
                                        "profile",
                                        "is_admin",
                                        "is_owner",
                                        "is_primary_owner",
                                        "is_restricted",
                                        "is_ultra_restricted",
                                        "is_bot",
                                        "updated",
                                        "is_app_user",
                                        "has_2fa"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "profile": {
                                            "$ref": "#/definitions/objs_user_profile"
                                        },
                                        "updated": {
                                            "type": "number"
                                        },
                                        "tz": {
                                            "type": [
                                                "null",
                                                "string"
                                            ]
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "deleted": {
                                            "type": "boolean"
                                        },
                                        "is_app_user": {
                                            "type": "boolean"
                                        },
                                        "is_bot": {
                                            "type": "boolean"
                                        },
                                        "tz_label": {
                                            "type": "string"
                                        },
                                        "real_name": {
                                            "type": "string"
                                        },
                                        "locale": {
                                            "type": "string"
                                        },
                                        "team_id": {
                                            "$ref": "#/definitions/defs_team"
                                        },
                                        "is_admin": {
                                            "type": "boolean"
                                        },
                                        "is_ultra_restricted": {
                                            "type": "boolean"
                                        },
                                        "is_owner": {
                                            "type": "boolean"
                                        },
                                        "is_restricted": {
                                            "type": "boolean"
                                        },
                                        "tz_offset": {
                                            "type": "number"
                                        },
                                        "has_2fa": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "$ref": "#/definitions/defs_user"
                                        },
                                        "color": {
                                            "pattern": "^[a-fA-F0-9]{6}$",
                                            "type": "string"
                                        },
                                        "is_primary_owner": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "user": {
                                    "profile": {
                                        "display_name": "spengler",
                                        "status_emoji": ":books:",
                                        "team": "T012AB3C4",
                                        "real_name": "Egon Spengler",
                                        "image_24": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                        "real_name_normalized": "Egon Spengler",
                                        "image_512": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                        "display_name_normalized": "spengler",
                                        "image_32": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                        "image_48": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                        "image_72": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                        "avatar_hash": "ge3b51ca72de",
                                        "status_text": "Print is dead",
                                        "email": "spengler@ghostbusters.example.com",
                                        "image_192": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg"
                                    },
                                    "updated": 1502138686,
                                    "tz": "America/Los_Angeles",
                                    "name": "spengler",
                                    "deleted": false,
                                    "is_app_user": false,
                                    "is_bot": false,
                                    "tz_label": "Pacific Daylight Time",
                                    "real_name": "episod",
                                    "color": "9f69e7",
                                    "team_id": "T012AB3C4",
                                    "is_admin": true,
                                    "is_ultra_restricted": false,
                                    "is_restricted": false,
                                    "is_owner": false,
                                    "tz_offset": -25200,
                                    "has_2fa": false,
                                    "id": "W012A3CDE",
                                    "is_primary_owner": false
                                }
                            }
                        }
                    }
                },
                "description": "Gets information about a user.",
                "parameters": [
                    {
                        "description": "Set this to `true` to receive the locale for this user. Defaults to `false`",
                        "type": "boolean",
                        "name": "include_locale",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `users:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "User to get info on",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "users_info"
            }
        },
        "/reactions.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "items": [
                                    {
                                        "message": {
                                            "username": "Shipit Notifications",
                                            "reactions": [
                                                {
                                                    "count": 1,
                                                    "name": "robot_face",
                                                    "users": [
                                                        "U2U85N1RV"
                                                    ]
                                                }
                                            ],
                                            "text": "Hello from Python! :tada:",
                                            "ts": "1507849573.000090",
                                            "subtype": "bot_message",
                                            "bot_id": "B4VLRLMKJ"
                                        },
                                        "type": "message",
                                        "channel": "C3UKJTQAC"
                                    },
                                    {
                                        "comment": {
                                            "comment": "This is a file comment",
                                            "reactions": [
                                                {
                                                    "count": 1,
                                                    "name": "white_check_mark",
                                                    "users": [
                                                        "U2U85N1RV"
                                                    ]
                                                }
                                            ],
                                            "created": 1508286096,
                                            "timestamp": 1508286096,
                                            "user": "U2U85N1RV",
                                            "type": "file_comment",
                                            "id": "Fc7LP08P1U"
                                        },
                                        "file": {
                                            "username": "",
                                            "reactions": [
                                                {
                                                    "count": 1,
                                                    "name": "stuck_out_tongue_winking_eye",
                                                    "users": [
                                                        "U2U85N1RV"
                                                    ]
                                                }
                                            ],
                                            "title": "computer.gif",
                                            "created": 1507850315,
                                            "channels": [
                                                "C2U7V2YA2"
                                            ],
                                            "comments_count": 1,
                                            "user": "U2U85N1RV"
                                        }
                                    },
                                    {
                                        "type": "file",
                                        "file": {
                                            "username": "",
                                            "reactions": [
                                                {
                                                    "count": 1,
                                                    "name": "stuck_out_tongue_winking_eye",
                                                    "users": [
                                                        "U2U85N1RV"
                                                    ]
                                                }
                                            ],
                                            "name": "computer.gif",
                                            "created": 1507850315,
                                            "title": "computer.gif",
                                            "channels": [
                                                "C2U7V2YA2"
                                            ],
                                            "comments_count": 1,
                                            "user": "U2U85N1RV",
                                            "id": "F7H0D7ZA4",
                                            "size": 1639034
                                        }
                                    }
                                ],
                                "paging": {
                                    "count": 100,
                                    "total": 3,
                                    "page": 1,
                                    "pages": 1
                                },
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists reactions made by a user.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `reactions:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "If true always return the complete reaction list.",
                        "type": "boolean",
                        "name": "full",
                        "in": "query"
                    },
                    {
                        "description": "Show reactions made by this user. Defaults to the authed user.",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "tags": [
                    "reactions"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reactions:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reactions.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "reactions_list"
            }
        },
        "/conversations.create": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.create method",
                            "title": "conversations.create error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "provided": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "name_taken",
                                        "restricted_action",
                                        "no_channel",
                                        "invalid_name_required",
                                        "invalid_name_punctuation",
                                        "invalid_name_maxlength",
                                        "invalid_name_specials",
                                        "invalid_name",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "detail": {
                                    "type": "string"
                                },
                                "needed": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response when name already in use",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "name_taken"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response conversations.create method",
                            "title": "conversations.create success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                }
                            }
                        },
                        "description": "If successful, the command returns a rather stark [conversation object](/types/conversation)",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "is_general": false,
                                    "name_normalized": "endeavor",
                                    "is_channel": true,
                                    "creator": "U0123456",
                                    "is_member": true,
                                    "is_archived": false,
                                    "topic": {
                                        "last_set": 0,
                                        "value": "",
                                        "creator": ""
                                    },
                                    "unread_count_display": 0,
                                    "priority": 0,
                                    "is_im": false,
                                    "is_ext_shared": false,
                                    "previous_names": [],
                                    "last_read": "0000000000.000000",
                                    "id": "C0EAQDV4Z",
                                    "is_org_shared": false,
                                    "is_pending_ext_shared": false,
                                    "is_mpim": false,
                                    "is_group": false,
                                    "purpose": {
                                        "last_set": 0,
                                        "value": "",
                                        "creator": ""
                                    },
                                    "is_private": false,
                                    "is_shared": false,
                                    "name": "endeavor",
                                    "created": 1504554479,
                                    "pending_shared": [],
                                    "unread_count": 0,
                                    "unlinked": 0,
                                    "latest": null
                                }
                            }
                        }
                    }
                },
                "description": "Initiates a public or private channel-based conversation",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Name of the public or private channel to create",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "description": "Create a private channel instead of a public one",
                        "type": "boolean",
                        "name": "is_private",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.create",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_create"
            }
        },
        "/team.billableInfo": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets billable users information for the current team.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `admin`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "A user to retrieve the billable information for. Defaults to all users.",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "tags": [
                    "team"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "admin"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/team.billableInfo",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "team_billableInfo"
            }
        },
        "/dnd.endDnd": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Ends the current user's Do Not Disturb session immediately.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `dnd:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    }
                ],
                "tags": [
                    "dnd"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "dnd:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/dnd.endDnd",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "dnd_endDnd"
            }
        },
        "/search.all": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "needed": "search:read",
                                "provided": "identify,bot:basic",
                                "ok": false,
                                "error": "missing_scope"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "files": {
                                    "matches": [
                                        {
                                            "groups": [],
                                            "initial_comment": {
                                                "comment": "Sure! Here's the workflow diagram!",
                                                "created": 1508804330,
                                                "timestamp": 1508804330,
                                                "is_intro": true,
                                                "user": "U2U85N1RZ",
                                                "id": "Fc7NLL52E7"
                                            },
                                            "filetype": "png",
                                            "channels": [],
                                            "display_as_bot": false,
                                            "id": "F7PKF1NR7",
                                            "size": 35705,
                                            "original_h": 117,
                                            "thumb_360_w": 128,
                                            "title": "slack workflow diagram",
                                            "url_private": "https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/slack_workflow_diagram.png",
                                            "thumb_360": "https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_360.png",
                                            "thumb_64": "https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_64.png",
                                            "ims": [],
                                            "score": "0.99982661240974",
                                            "top_file": false,
                                            "thumb_80": "https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_80.png",
                                            "thumb_360_h": 117,
                                            "preview": null,
                                            "original_w": 128,
                                            "username": "amy",
                                            "timestamp": 1508804330,
                                            "public_url_shared": false,
                                            "editable": false,
                                            "thumb_160": "https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_160.png",
                                            "url_private_download": "https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/download/slack_workflow_diagram.png",
                                            "user": "U2U85N1RZ",
                                            "image_exif_rotation": 1,
                                            "is_public": true,
                                            "pretty_type": "PNG",
                                            "is_external": false,
                                            "mimetype": "image/png",
                                            "permalink_public": "https://slack-files.com/T2U81E2FZ-F7PKF1NR7-bea9143f18",
                                            "permalink": "https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png",
                                            "name": "slack workflow diagram.png",
                                            "created": 1508804330,
                                            "external_type": "",
                                            "comments_count": 1,
                                            "mode": "hosted"
                                        }
                                    ],
                                    "pagination": {
                                        "last": 1,
                                        "total_count": 1,
                                        "page_count": 1,
                                        "per_page": 20,
                                        "page": 1,
                                        "first": 1
                                    },
                                    "total": 1,
                                    "paging": {
                                        "count": 20,
                                        "total": 1,
                                        "page": 1,
                                        "pages": 1
                                    }
                                },
                                "ok": true,
                                "messages": {
                                    "matches": [
                                        {
                                            "username": "amy",
                                            "permalink": "https://example.slack.com/archives/C2U86NC6M/p1508804330000296",
                                            "text": "uploaded a file: <https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png|slack workflow diagram> and commented: Sure! Here's the workflow diagram!",
                                            "ts": "1508804330.000296",
                                            "next": {
                                                "username": "john",
                                                "text": "Thanks!",
                                                "ts": "1508804378.000219",
                                                "iid": "6f510ea1-e1d3-4f3f-bdb9-f9c6f6e9d609",
                                                "user": "U2U85HJ7R",
                                                "type": "message"
                                            },
                                            "iid": "35692677-e60e-43d9-ac45-1987cea88975",
                                            "user": "U2U85N1RZ",
                                            "team": "T2U81E2FZ",
                                            "type": "message",
                                            "channel": {
                                                "is_pending_ext_shared": false,
                                                "is_shared": false,
                                                "is_mpim": false,
                                                "pending_shared": [],
                                                "is_ext_shared": false,
                                                "is_org_shared": false,
                                                "id": "C2U86NC6M",
                                                "is_private": false,
                                                "name": "general"
                                            },
                                            "previous": {
                                                "username": "john",
                                                "text": "Can you send me the Slack workflow diagram?",
                                                "ts": "1508804301.000026",
                                                "iid": "aba8603c-0543-4fb2-9118-a5ac85f3d138",
                                                "user": "U2U85HJ7R",
                                                "type": "message"
                                            }
                                        }
                                    ],
                                    "pagination": {
                                        "last": 1,
                                        "total_count": 1,
                                        "page_count": 1,
                                        "per_page": 20,
                                        "page": 1,
                                        "first": 1
                                    },
                                    "total": 1,
                                    "paging": {
                                        "count": 20,
                                        "total": 1,
                                        "page": 1,
                                        "pages": 1
                                    }
                                },
                                "posts": {
                                    "matches": [],
                                    "total": 0
                                },
                                "query": "diagram"
                            }
                        }
                    }
                },
                "description": "Searches for messages and files matching a query.",
                "parameters": [
                    {
                        "description": "Change sort direction to ascending (`asc`) or descending (`desc`).",
                        "type": "string",
                        "name": "sort_dir",
                        "in": "query"
                    },
                    {
                        "description": "Search query. May contains booleans, etc.",
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "description": "Return matches sorted by either `score` or `timestamp`.",
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `search:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Pass a value of `true` to enable query highlight markers (see below).",
                        "type": "boolean",
                        "name": "highlight",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "tags": [
                    "search"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "search:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/search.all",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "search_all"
            }
        },
        "/files.comments.delete": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response files.comments.delete method",
                            "title": "files.comments.delete error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "cant_delete",
                                        "comment_not_found",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Standard failure response when used with an invalid token",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "file_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response files.comments.delete method",
                            "title": "files.comments.delete schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard success response is very simple",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Deletes an existing comment on a file.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `files:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The comment to delete.",
                        "type": "string",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "description": "File to delete a comment from.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "files.comments",
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.comments.delete",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "files_comments_delete"
            }
        },
        "/auth.revoke": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "revoked": true
                            }
                        }
                    }
                },
                "description": "Revokes a token.",
                "parameters": [
                    {
                        "description": "Setting this parameter to `1` triggers a _testing mode_ where the specified token will not actually be revoked.",
                        "type": "boolean",
                        "name": "test",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `none`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/auth.revoke",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "auth_revoke"
            }
        },
        "/reactions.add": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "already_reacted"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Adds a reaction to an item.",
                "parameters": [
                    {
                        "description": "Reaction (emoji) name.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "description": "File comment to add reaction to.",
                        "type": "string",
                        "name": "file_comment",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to add reaction to.",
                        "type": "number",
                        "name": "timestamp",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `reactions:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "File to add reaction to.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "description": "Channel where the message to add reaction to was posted.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "reactions"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reactions:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reactions.add",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "reactions_add"
            }
        },
        "/stars.add": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Adds a star to an item.",
                "parameters": [
                    {
                        "description": "File comment to add star to.",
                        "type": "string",
                        "name": "file_comment",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to add star to.",
                        "type": "number",
                        "name": "timestamp",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `stars:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`).",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    },
                    {
                        "description": "File to add star to.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "stars"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "stars:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/stars.add",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "stars_add"
            }
        },
        "/reminders.complete": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Marks a reminder as complete.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `reminders:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The ID of the reminder to be marked as complete",
                        "type": "string",
                        "name": "reminder",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "reminders"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reminders:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reminders.complete",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "reminders_complete"
            }
        },
        "/chat.unfurl": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {},
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "cannot_unfurl_url"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response of chat.unfurl method",
                            "title": "chat.unfurl success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical, minimal success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Provide custom unfurl behavior for user-posted URLs",
                "parameters": [
                    {
                        "description": "Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior",
                        "type": "string",
                        "name": "user_auth_message",
                        "in": "formData"
                    },
                    {
                        "description": "Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain",
                        "type": "boolean",
                        "name": "user_auth_required",
                        "in": "formData"
                    },
                    {
                        "description": "URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl message attachments.",
                        "type": "string",
                        "name": "unfurls",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to add unfurl behavior to.",
                        "type": "string",
                        "name": "ts",
                        "in": "formData"
                    },
                    {
                        "description": "Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded.",
                        "type": "string",
                        "name": "user_auth_url",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `links:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel ID of the message",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "chat"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "links:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/chat.unfurl",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "chat_unfurl"
            }
        },
        "/conversations.unarchive": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.unarchive method",
                            "title": "conversations.unarchive error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "not_archived",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.unarchive method",
                            "title": "conversations.unarchive success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Reverses conversation archival.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "ID of conversation to unarchive",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.unarchive",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_unarchive"
            }
        },
        "/groups.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response groups.info method",
                            "title": "groups.info error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response groups.info method",
                            "title": "groups.info success schema",
                            "required": [
                                "ok",
                                "group"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "group": {
                                    "$ref": "#/definitions/objs_group"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets information about a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Set this to `true` to receive the locale for this group. Defaults to `false`",
                        "type": "boolean",
                        "name": "include_locale",
                        "in": "query"
                    },
                    {
                        "description": "Private channel to get info on",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "groups_info"
            }
        },
        "/files.revokePublicURL": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Revokes public/external sharing access for a file",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `files:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "File to revoke",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.revokePublicURL",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "files_revokePublicURL"
            }
        },
        "/conversations.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.list method",
                            "title": "conversations.list error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "missing_scope",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.list method",
                            "title": "conversations.list success schema",
                            "required": [
                                "ok",
                                "channels"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "channels": {
                                    "uniqueItems": true,
                                    "items": {
                                        "$ref": "#/definitions/objs_conversation"
                                    },
                                    "type": "array"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "response_metadata": {
                                    "additionalProperties": true,
                                    "required": [
                                        "next_cursor"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "next_cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Typical success response with only public channels",
                        "examples": {
                            "application/json": {
                                "channels": [
                                    {
                                        "is_general": true,
                                        "name_normalized": "general",
                                        "is_channel": true,
                                        "creator": "U012A3CDE",
                                        "is_member": true,
                                        "is_archived": false,
                                        "topic": {
                                            "last_set": 0,
                                            "value": "Company-wide announcements and work-based matters",
                                            "creator": ""
                                        },
                                        "is_im": false,
                                        "is_ext_shared": false,
                                        "previous_names": [],
                                        "id": "C012AB3CD",
                                        "is_org_shared": false,
                                        "is_pending_ext_shared": false,
                                        "is_mpim": false,
                                        "is_group": false,
                                        "purpose": {
                                            "last_set": 0,
                                            "value": "This channel is for team-wide communication and announcements. All team members are in this channel.",
                                            "creator": ""
                                        },
                                        "is_private": false,
                                        "is_shared": false,
                                        "num_members": 4,
                                        "name": "general",
                                        "created": 1449252889,
                                        "pending_shared": [],
                                        "unlinked": 0
                                    },
                                    {
                                        "is_general": false,
                                        "name_normalized": "random",
                                        "is_channel": true,
                                        "creator": "U061F7AUR",
                                        "is_member": true,
                                        "is_archived": false,
                                        "topic": {
                                            "last_set": 0,
                                            "value": "Non-work banter and water cooler conversation",
                                            "creator": ""
                                        },
                                        "is_im": false,
                                        "is_ext_shared": false,
                                        "previous_names": [],
                                        "id": "C061EG9T2",
                                        "is_org_shared": false,
                                        "is_pending_ext_shared": false,
                                        "is_mpim": false,
                                        "is_group": false,
                                        "purpose": {
                                            "last_set": 0,
                                            "value": "A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.",
                                            "creator": ""
                                        },
                                        "is_private": false,
                                        "is_shared": false,
                                        "num_members": 4,
                                        "name": "random",
                                        "created": 1449252889,
                                        "pending_shared": [],
                                        "unlinked": 0
                                    }
                                ],
                                "ok": true,
                                "response_metadata": {
                                    "next_cursor": "dGVhbTpDMDYxRkE1UEI="
                                }
                            }
                        }
                    }
                },
                "description": "Lists all channels in a Slack team.",
                "parameters": [
                    {
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `conversations:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Set to `true` to exclude archived channels from the list",
                        "type": "boolean",
                        "name": "exclude_archived",
                        "in": "query"
                    },
                    {
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.",
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`",
                        "type": "string",
                        "name": "types",
                        "in": "query"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:read",
                            "groups:read",
                            "im:read",
                            "mpim:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "conversations_list"
            }
        },
        "/stars.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists stars for a user.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `stars:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "tags": [
                    "stars"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "stars:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/stars.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "stars_list"
            }
        },
        "/reactions.get": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets reactions for an item.",
                "parameters": [
                    {
                        "description": "If true always return the complete reaction list.",
                        "type": "boolean",
                        "name": "full",
                        "in": "query"
                    },
                    {
                        "description": "File comment to get reactions for.",
                        "type": "string",
                        "name": "file_comment",
                        "in": "query"
                    },
                    {
                        "description": "Timestamp of the message to get reactions for.",
                        "type": "number",
                        "name": "timestamp",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `reactions:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "File to get reactions for.",
                        "type": "string",
                        "name": "file",
                        "in": "query"
                    },
                    {
                        "description": "Channel where the message to get reactions for was posted.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "reactions"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reactions:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reactions.get",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "reactions_get"
            }
        },
        "/im.history": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from im.history method",
                            "title": "im.history error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "invalid_ts_latest",
                                        "invalid_ts_oldest",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from im.history method",
                            "title": "im.history success schema",
                            "required": [
                                "ok",
                                "messages",
                                "has_more"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "has_more": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "messages": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/objs_message"
                                    }
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Fetches history of messages and events from direct message channel.",
                "parameters": [
                    {
                        "description": "Number of messages to return, between 1 and 1000.",
                        "type": "integer",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Include `unread_count_display` in the output?",
                        "type": "boolean",
                        "name": "unreads",
                        "in": "query"
                    },
                    {
                        "description": "Include messages with latest or oldest timestamp in results.",
                        "type": "boolean",
                        "name": "inclusive",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `im:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Start of time range of messages to include in results.",
                        "type": "number",
                        "name": "oldest",
                        "in": "query"
                    },
                    {
                        "description": "Direct message channel to fetch history for.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    },
                    {
                        "description": "End of time range of messages to include in results.",
                        "type": "number",
                        "name": "latest",
                        "in": "query"
                    }
                ],
                "tags": [
                    "im"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "im:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/im.history",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "im_history"
            }
        },
        "/pins.add": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Pins an item to a channel.",
                "parameters": [
                    {
                        "description": "File comment to pin.",
                        "type": "string",
                        "name": "file_comment",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to pin.",
                        "type": "number",
                        "name": "timestamp",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `pins:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "File to pin.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "description": "Channel to pin the item in.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "pins"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "pins:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/pins.add",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "pins_add"
            }
        },
        "/channels.leave": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Leaves a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel to leave",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.leave",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_leave"
            }
        },
        "/conversations.setPurpose": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.setPurpose method",
                            "title": "conversations.setPurpose error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "not_in_channel",
                                        "is_archived",
                                        "too_long",
                                        "user_is_restricted",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.setPurpose method",
                            "title": "conversations.setPurpose success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the purpose for a conversation.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "A new, specialer purpose",
                        "type": "string",
                        "name": "purpose",
                        "in": "formData"
                    },
                    {
                        "description": "Conversation to set the purpose of",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.setPurpose",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_setPurpose"
            }
        },
        "/channels.rename": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "previous_names": [
                                        "humans"
                                    ],
                                    "is_general": false,
                                    "name_normalized": "humans-and-bots",
                                    "is_shared": false,
                                    "is_channel": true,
                                    "creator": "U2U85N1RZ",
                                    "is_member": false,
                                    "is_mpim": false,
                                    "is_archived": false,
                                    "created": 1477445146,
                                    "is_org_shared": false,
                                    "topic": {
                                        "last_set": 1509475775,
                                        "value": "here be robots",
                                        "creator": "U2U85N1RZ"
                                    },
                                    "purpose": {
                                        "last_set": 1509475801,
                                        "value": "the purpose of this channel is to bring people and robots together in harmony",
                                        "creator": "U2U85N1RZ"
                                    },
                                    "members": [],
                                    "unlinked": 0,
                                    "id": "C2U875RJN",
                                    "is_private": false,
                                    "name": "humans-and-bots"
                                }
                            }
                        }
                    }
                },
                "description": "Renames a channel.",
                "parameters": [
                    {
                        "description": "Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.",
                        "type": "boolean",
                        "name": "validate",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "New name for channel.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "description": "Channel to rename",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.rename",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_rename"
            }
        },
        "/files.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists & filters team files.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Filter files appearing in a specific channel, indicated by its ID.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    },
                    {
                        "description": "Filter files created before this timestamp (inclusive).",
                        "type": "number",
                        "name": "ts_to",
                        "in": "query"
                    },
                    {
                        "description": "Filter files created after this timestamp (inclusive).",
                        "type": "number",
                        "name": "ts_from",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `files:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Filter files created by a single user.",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "description": "Filter files by type:\n\n* `all` - All files\n* `spaces` - Posts\n* `snippets` - Snippets\n* `images` - Image files\n* `gdocs` - Google docs\n* `zips` - Zip files\n* `pdfs` - PDF files\n\nYou can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.",
                        "type": "string",
                        "name": "types",
                        "in": "query"
                    }
                ],
                "tags": [
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "files_list"
            }
        },
        "/mpim.mark": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the read cursor in a multiparty direct message channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `mpim:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Timestamp of the most recently seen message.",
                        "type": "number",
                        "name": "ts",
                        "in": "formData"
                    },
                    {
                        "description": "multiparty direct message channel to set reading cursor in.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "mpim"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/mpim.mark",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "mpim_mark"
            }
        },
        "/usergroups.users.update": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "usergroup": {
                                    "is_external": false,
                                    "handle": "marketing-team",
                                    "description": "Marketing gurus, PR experts and product advocates.",
                                    "date_delete": 0,
                                    "date_update": 1447102109,
                                    "created_by": "U060R4BJ4",
                                    "deleted_by": null,
                                    "date_create": 1447096577,
                                    "team_id": "T060R4BHN",
                                    "updated_by": "U060R4BJ4",
                                    "user_count": 1,
                                    "auto_type": null,
                                    "prefs": {
                                        "channels": [],
                                        "groups": []
                                    },
                                    "users": [
                                        "U060R4BJ4",
                                        "U060RNRCZ"
                                    ],
                                    "is_usergroup": true,
                                    "id": "S0616NG6M",
                                    "name": "Marketing Team"
                                }
                            }
                        }
                    }
                },
                "description": "Update the list of users for a User Group",
                "parameters": [
                    {
                        "description": "Include the number of users in the User Group.",
                        "type": "boolean",
                        "name": "include_count",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `usergroups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "A comma separated string of encoded user IDs that represent the entire list of users for the User Group.",
                        "type": "string",
                        "name": "users",
                        "in": "formData"
                    },
                    {
                        "description": "The encoded ID of the User Group to update.",
                        "type": "string",
                        "name": "usergroup",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "usergroups.users",
                    "usergroups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "usergroups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/usergroups.users.update",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "usergroups_users_update"
            }
        },
        "/conversations.setTopic": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.setTopic method",
                            "title": "conversations.setTopic error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "not_in_channel",
                                        "is_archived",
                                        "too_long",
                                        "user_is_restricted",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.setTopic method",
                            "title": "conversations.setTopic success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the topic for a conversation.",
                "parameters": [
                    {
                        "description": "The new topic string. Does not support formatting or linkification.",
                        "type": "string",
                        "name": "topic",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Conversation to set the topic of",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.setTopic",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_setTopic"
            }
        },
        "/conversations.members": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response conversations.members method",
                            "title": "conversations.members error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "invalid_limit",
                                        "invalid_cursor",
                                        "fetch_members_failed",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response when an invalid cursor is provided",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_cursor"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response conversations.members method",
                            "title": "conversations.members success schema",
                            "required": [
                                "ok",
                                "members",
                                "response_metadata"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "members": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/defs_user"
                                    }
                                },
                                "response_metadata": {
                                    "additionalProperties": true,
                                    "required": [
                                        "next_cursor"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "next_cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Typical paginated success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "response_metadata": {
                                    "next_cursor": "e3VzZXJfaWQ6IFcxMjM0NTY3fQ=="
                                },
                                "members": [
                                    "U023BECGF",
                                    "U061F7AUR",
                                    "W012A3CDE"
                                ]
                            }
                        }
                    }
                },
                "description": "Retrieve members of a conversation.",
                "parameters": [
                    {
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `conversations:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "ID of the conversation to retrieve members for",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:read",
                            "groups:read",
                            "im:read",
                            "mpim:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.members",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "conversations_members"
            }
        },
        "/conversations.open": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.open method",
                            "title": "conversations.open error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "user_not_found",
                                        "user_not_visible",
                                        "user_disabled",
                                        "users_list_not_supplied",
                                        "not_enough_users",
                                        "too_many_users",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "channel_not_found"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.open method when opening channels, ims, mpims",
                            "title": "conversations.open success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "no_op": {
                                    "type": "boolean"
                                },
                                "already_open": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "id": "D069C7QFK"
                                }
                            }
                        }
                    }
                },
                "description": "Opens or resumes a direct message or multi-person direct message.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Boolean, indicates you want the full IM channel definition in the response.",
                        "type": "boolean",
                        "name": "return_im",
                        "in": "formData"
                    },
                    {
                        "description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`.",
                        "type": "string",
                        "name": "users",
                        "in": "formData"
                    },
                    {
                        "description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.open",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_open"
            }
        },
        "/pins.remove": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "no_pin"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Un-pins an item from a channel.",
                "parameters": [
                    {
                        "description": "File comment to un-pin.",
                        "type": "string",
                        "name": "file_comment",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to un-pin.",
                        "type": "number",
                        "name": "timestamp",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `pins:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "File to un-pin.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "description": "Channel where the item is pinned to.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "pins"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "pins:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/pins.remove",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "pins_remove"
            }
        },
        "/files.delete": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Deletes a file.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `files:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "ID of file to delete.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.delete",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "files_delete"
            }
        },
        "/pins.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "items": [
                                    {
                                        "message": {
                                            "permalink": "https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151",
                                            "text": "What is the meaning of life?",
                                            "ts": "1508197641.000151",
                                            "pinned_to": [
                                                "C2U86NC6H"
                                            ],
                                            "user": "U2U85N1RZ",
                                            "type": "message"
                                        },
                                        "type": "message",
                                        "created_by": "U2U85N1RZ",
                                        "channel": "C2U86NC6H",
                                        "created": 1508881078
                                    },
                                    {
                                        "message": {
                                            "permalink": "https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015",
                                            "text": "The meaning of life, the universe, and everything is 42.",
                                            "ts": "1503289197.000015",
                                            "pinned_to": [
                                                "C2U86NC6H"
                                            ],
                                            "user": "U2U85N1RZ",
                                            "type": "message"
                                        },
                                        "type": "message",
                                        "created_by": "U2U85N1RZ",
                                        "channel": "C2U86NC6H",
                                        "created": 1508880991
                                    }
                                ],
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists items pinned to a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `pins:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Channel to get pinned items for.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "pins"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "pins:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/pins.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "pins_list"
            }
        },
        "/api.test": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response api.test method",
                            "title": "api.test error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Artificial error response",
                        "examples": {
                            "application/json": {
                                "args": {
                                    "error": "my_error"
                                },
                                "ok": false,
                                "error": "my_error"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response api.test method",
                            "title": "api.test success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Checks API calling code.",
                "parameters": [
                    {
                        "description": "example property to return",
                        "type": "string",
                        "name": "foo",
                        "in": "query"
                    },
                    {
                        "description": "Error response to return",
                        "type": "string",
                        "name": "error",
                        "in": "query"
                    }
                ],
                "tags": [
                    "api"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/api.test",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "api_test"
            }
        },
        "/reminders.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists all reminders created by or for a given user.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `reminders:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "reminders"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reminders:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reminders.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "reminders_list"
            }
        },
        "/users.getPresence": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response users.getPresence method",
                            "title": "users.counts error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65",
                            "title": "API method: users.getPresence",
                            "required": [
                                "ok",
                                "presence"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "manual_away": {
                                    "type": "boolean"
                                },
                                "presence": {
                                    "type": "string"
                                },
                                "last_activity": {
                                    "type": "integer"
                                },
                                "online": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "connection_count": {
                                    "type": "integer"
                                },
                                "auto_away": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "When requesting information for a different user, this method just returns the current presence (either `active` or `away`).",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "presence": "active"
                            }
                        }
                    }
                },
                "description": "Gets user presence information.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `users:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "User to get presence info on. Defaults to the authed user.",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.getPresence",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "users_getPresence"
            }
        },
        "/usergroups.update": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "usergroup": {
                                    "is_external": false,
                                    "handle": "marketing-team",
                                    "description": "Marketing gurus, PR experts and product advocates.",
                                    "date_delete": 0,
                                    "date_update": 1447102109,
                                    "created_by": "U060R4BJ4",
                                    "deleted_by": null,
                                    "date_create": 1447096577,
                                    "team_id": "T060R4BHN",
                                    "updated_by": "U060R4BJ4",
                                    "user_count": 1,
                                    "auto_type": null,
                                    "prefs": {
                                        "channels": [],
                                        "groups": []
                                    },
                                    "users": [
                                        "U060R4BJ4",
                                        "U060RNRCZ"
                                    ],
                                    "is_usergroup": true,
                                    "id": "S0616NG6M",
                                    "name": "Marketing Team"
                                }
                            }
                        }
                    }
                },
                "description": "Update an existing User Group",
                "parameters": [
                    {
                        "description": "A mention handle. Must be unique among channels, users and User Groups.",
                        "type": "string",
                        "name": "handle",
                        "in": "formData"
                    },
                    {
                        "description": "A short description of the User Group.",
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
                        "type": "string",
                        "name": "channels",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `usergroups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Include the number of users in the User Group.",
                        "type": "boolean",
                        "name": "include_count",
                        "in": "formData"
                    },
                    {
                        "description": "The encoded ID of the User Group to update.",
                        "type": "string",
                        "name": "usergroup",
                        "in": "formData"
                    },
                    {
                        "description": "A name for the User Group. Must be unique among User Groups.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "usergroups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "usergroups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/usergroups.update",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "usergroups_update"
            }
        },
        "/conversations.leave": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.leave method",
                            "title": "conversations.leave error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "is_archived",
                                        "cant_leave_general",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response when attempting to leave a workspace's \"general\" channel",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "cant_leave_general"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.leave method",
                            "title": "conversations.leave success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "not_in_channel": {
                                    "enum": [
                                        true
                                    ],
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Leaves a conversation.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Conversation to leave",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.leave",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_leave"
            }
        },
        "/files.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {},
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response files.info method",
                            "title": "files.info schema",
                            "required": [
                                "ok",
                                "file",
                                "comments",
                                "paging"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "paging": {
                                    "$ref": "#/definitions/objs_paging"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "file": {
                                    "$ref": "#/definitions/objs_file"
                                },
                                "comments": {
                                    "$ref": "#/definitions/objs_comments"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets information about a team file.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `files:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Specify a file by providing its ID.",
                        "type": "string",
                        "name": "file",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "tags": [
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "files_info"
            }
        },
        "/groups.leave": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Leaves a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Private channel to leave",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.leave",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_leave"
            }
        },
        "/apps.permissions.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard failure response when used with an invalid token",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard success response when used with a user token",
                        "examples": {
                            "application/json": {
                                "info": {
                                    "app_home": {
                                        "scopes": [
                                            "chat:write:user",
                                            "im:history",
                                            "im:read"
                                        ],
                                        "resources": {
                                            "ids": [
                                                "D0C0NU1Q8",
                                                "D0BH95DLH"
                                            ]
                                        }
                                    },
                                    "group": {
                                        "scopes": [],
                                        "resources": {
                                            "ids": []
                                        }
                                    },
                                    "mpim": {
                                        "scopes": [],
                                        "resources": {
                                            "ids": []
                                        }
                                    },
                                    "im": {
                                        "scopes": [],
                                        "resources": {
                                            "ids": []
                                        }
                                    },
                                    "team": {
                                        "scopes": [],
                                        "resources": {
                                            "ids": []
                                        }
                                    },
                                    "channel": {
                                        "scopes": [
                                            "channels:read"
                                        ],
                                        "resources": {
                                            "ids": [
                                                "C061FA5PB"
                                            ],
                                            "wildcard": false,
                                            "excluded_ids": []
                                        }
                                    }
                                },
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Returns list of permissions this app has on a team.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `none`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "apps.permissions",
                    "apps"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/apps.permissions.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "apps_permissions_info"
            }
        },
        "/usergroups.create": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Create a User Group",
                "parameters": [
                    {
                        "description": "A mention handle. Must be unique among channels, users and User Groups.",
                        "type": "string",
                        "name": "handle",
                        "in": "formData"
                    },
                    {
                        "description": "A name for the User Group. Must be unique among User Groups.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
                        "type": "string",
                        "name": "channels",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `usergroups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Include the number of users in each User Group.",
                        "type": "boolean",
                        "name": "include_count",
                        "in": "formData"
                    },
                    {
                        "description": "A short description of the User Group.",
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "usergroups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "usergroups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/usergroups.create",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "usergroups_create"
            }
        },
        "/groups.createChild": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Clones and archives a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "formData"
                    },
                    {
                        "description": "Private channel to clone and archive.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.createChild",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "groups_createChild"
            }
        },
        "/channels.mark": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response channels.mark method",
                            "title": "channels.mark error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "invalid_timestamp",
                                        "not_in_channel",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response channels.mark method",
                            "title": "channels.mark success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the read cursor in a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Timestamp of the most recently seen message.",
                        "type": "number",
                        "name": "ts",
                        "in": "formData"
                    },
                    {
                        "description": "Channel to set reading cursor in.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.mark",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_mark"
            }
        },
        "/users.deletePhoto": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Delete the user profile photo",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `users.profile:write`",
                        "type": "string",
                        "name": "token",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users.profile:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.deletePhoto",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "users_deletePhoto"
            }
        },
        "/users.setPhoto": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Set the user profile photo",
                "parameters": [
                    {
                        "description": "File contents via `multipart/form-data`.",
                        "type": "string",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "description": "Width/height of crop box (always square)",
                        "type": "integer",
                        "name": "crop_w",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `users.profile:write`",
                        "type": "string",
                        "name": "token",
                        "in": "formData"
                    },
                    {
                        "description": "Y coordinate of top-left corner of crop box",
                        "type": "integer",
                        "name": "crop_y",
                        "in": "formData"
                    },
                    {
                        "description": "X coordinate of top-left corner of crop box",
                        "type": "integer",
                        "name": "crop_x",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users.profile:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.setPhoto",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "users_setPhoto"
            }
        },
        "/files.sharedPublicURL": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Enables a file for public/external sharing.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `files:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "File to share",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.sharedPublicURL",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "files_sharedPublicURL"
            }
        },
        "/conversations.kick": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response conversations.kick method",
                            "title": "conversations.kick error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "user_not_found",
                                        "cant_kick_self",
                                        "not_in_channel",
                                        "cant_kick_from_general",
                                        "restricted_action",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response when you attempt to kick yourself from a channel",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "cant_kick_self"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response conversations.kick method",
                            "title": "conversations.kick success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Removes a user from a conversation.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "User ID to be removed.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "ID of conversation to remove user from.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.kick",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_kick"
            }
        },
        "/chat.postEphemeral": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {},
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "user_not_in_channel"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response of chat.postEphemeral method",
                            "title": "chat.postEphemeral success schema",
                            "required": [
                                "ok",
                                "message_ts"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "message_ts": {
                                    "$ref": "#/definitions/defs_ts"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "message_ts": "1502210682.580145"
                            }
                        }
                    }
                },
                "description": "Sends an ephemeral message to a user in a channel.",
                "parameters": [
                    {
                        "description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
                        "type": "string",
                        "name": "attachments",
                        "in": "formData"
                    },
                    {
                        "description": "Text of the message to send. See below for an explanation of [formatting](#formatting). This field is usually required, unless you're providing only `attachments` instead.",
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "description": "Find and link channel names and usernames.",
                        "type": "boolean",
                        "name": "link_names",
                        "in": "formData"
                    },
                    {
                        "description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
                        "type": "string",
                        "name": "parse",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `chat:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "`id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "Pass true to post the message as the authed bot. Defaults to false.",
                        "type": "boolean",
                        "name": "as_user",
                        "in": "formData"
                    },
                    {
                        "description": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "chat"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "chat:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/chat.postEphemeral",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "chat_postEphemeral"
            }
        },
        "/conversations.rename": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.rename method",
                            "title": "conversations.rename error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "user_is_restricted",
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "not_in_channel",
                                        "not_authorized",
                                        "invalid_name",
                                        "name_taken",
                                        "invalid_name_required",
                                        "invalid_name_punctuation",
                                        "invalid_name_maxlength",
                                        "invalid_name_specials",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response when the calling user is not a member of the conversation",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "not_in_channel"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.rename method",
                            "title": "conversations.rename success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "is_general": true,
                                    "name_normalized": "general",
                                    "is_channel": true,
                                    "creator": "W012A3BCD",
                                    "is_member": true,
                                    "is_archived": false,
                                    "topic": {
                                        "last_set": 1449709364,
                                        "value": "For public discussion of generalities",
                                        "creator": "W012A3BCD"
                                    },
                                    "is_im": false,
                                    "is_ext_shared": false,
                                    "previous_names": [
                                        "specifics",
                                        "abstractions",
                                        "etc"
                                    ],
                                    "last_read": "1502126650.228446",
                                    "id": "C012AB3CD",
                                    "is_org_shared": false,
                                    "locale": "en-US",
                                    "is_pending_ext_shared": false,
                                    "is_mpim": false,
                                    "is_group": false,
                                    "is_read_only": false,
                                    "purpose": {
                                        "last_set": 1449709364,
                                        "value": "This part of the workspace is for fun. Make fun here.",
                                        "creator": "W012A3BCD"
                                    },
                                    "is_private": false,
                                    "is_shared": false,
                                    "num_members": 23,
                                    "name": "general",
                                    "created": 1449252889,
                                    "pending_shared": [],
                                    "unlinked": 0
                                }
                            }
                        }
                    }
                },
                "description": "Renames a conversation.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "New name for conversation.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "description": "ID of conversation to rename",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.rename",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_rename"
            }
        },
        "/users.identity": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "account_inactive"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "You will receive at a minimum the following information:",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "user": {
                                    "name": "Sonny Whether",
                                    "id": "U0G9QF9C6"
                                },
                                "team": {
                                    "id": "T0G9PQBBK"
                                }
                            }
                        }
                    }
                },
                "description": "Get a user's identity.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `identity.basic`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "identity.basic"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.identity",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "users_identity"
            }
        },
        "/usergroups.enable": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Enable a User Group",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `usergroups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Include the number of users in the User Group.",
                        "type": "boolean",
                        "name": "include_count",
                        "in": "formData"
                    },
                    {
                        "description": "The encoded ID of the User Group to enable.",
                        "type": "string",
                        "name": "usergroup",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "usergroups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "usergroups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/usergroups.enable",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "usergroups_enable"
            }
        },
        "/dnd.setSnooze": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Turns on Do Not Disturb mode for the current user, or changes its duration.",
                "parameters": [
                    {
                        "description": "Number of minutes, from now, to snooze until.",
                        "type": "integer",
                        "name": "num_minutes",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `dnd:write`",
                        "type": "string",
                        "name": "token",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "dnd"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "dnd:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/dnd.setSnooze",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "dnd_setSnooze"
            }
        },
        "/chat.update": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {},
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "cant_update_message"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response of chat.update method",
                            "title": "chat.update success schema",
                            "required": [
                                "ok",
                                "channel",
                                "ts",
                                "text"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "text": {
                                    "type": "string",
                                    "title": "Updated message text"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "ts": {
                                    "$ref": "#/definitions/defs_ts"
                                },
                                "channel": {
                                    "$ref": "#/definitions/defs_channel"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "text": "Updated text you carefully authored",
                                "ok": true,
                                "ts": "1401383885.000061",
                                "channel": "C024BE91L"
                            }
                        }
                    }
                },
                "description": "Updates a message.",
                "parameters": [
                    {
                        "description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`.",
                        "type": "string",
                        "name": "attachments",
                        "in": "formData"
                    },
                    {
                        "description": "New text for the message, using the [default formatting rules](/docs/formatting). It's not required when presenting `attachments`.",
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to be updated.",
                        "type": "number",
                        "name": "ts",
                        "in": "formData"
                    },
                    {
                        "description": "Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. See [below](#formatting).",
                        "type": "string",
                        "name": "parse",
                        "in": "formData"
                    },
                    {
                        "description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.",
                        "type": "boolean",
                        "name": "as_user",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `chat:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Find and link channel names and usernames. Defaults to `none`. This parameter should be used in conjunction with `parse`. To set `link_names` to `1`, specify a `parse` mode of `full`.",
                        "type": "boolean",
                        "name": "link_names",
                        "in": "formData"
                    },
                    {
                        "description": "Channel containing the message to be updated.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "chat"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "chat:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/chat.update",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "chat_update"
            }
        },
        "/mpim.history": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Fetches history of messages and events from a multiparty direct message.",
                "parameters": [
                    {
                        "description": "Number of messages to return, between 1 and 1000.",
                        "type": "integer",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Include `unread_count_display` in the output?",
                        "type": "boolean",
                        "name": "unreads",
                        "in": "query"
                    },
                    {
                        "description": "Include messages with latest or oldest timestamp in results.",
                        "type": "boolean",
                        "name": "inclusive",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `mpim:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Start of time range of messages to include in results.",
                        "type": "number",
                        "name": "oldest",
                        "in": "query"
                    },
                    {
                        "description": "Multiparty direct message to fetch history for.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    },
                    {
                        "description": "End of time range of messages to include in results.",
                        "type": "number",
                        "name": "latest",
                        "in": "query"
                    }
                ],
                "tags": [
                    "mpim"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "mpim:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/mpim.history",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "mpim_history"
            }
        },
        "/apps.permissions.request": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Allows an app to request additional scopes",
                "parameters": [
                    {
                        "description": "A comma separated list of scopes to request for",
                        "type": "string",
                        "name": "scopes",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `none`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Token used to trigger the permissions API",
                        "type": "string",
                        "name": "trigger_id",
                        "in": "query"
                    }
                ],
                "tags": [
                    "apps.permissions",
                    "apps"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/apps.permissions.request",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "apps_permissions_request"
            }
        },
        "/search.files": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "No query passed"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "files": {
                                    "matches": [
                                        {
                                            "thumb_480_w": 480,
                                            "reactions": [
                                                {
                                                    "count": 1,
                                                    "name": "stuck_out_tongue_winking_eye",
                                                    "users": [
                                                        "U2U85N1RZ"
                                                    ]
                                                }
                                            ],
                                            "thumb_480_gif": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.gif",
                                            "groups": [],
                                            "filetype": "gif",
                                            "channels": [],
                                            "display_as_bot": false,
                                            "id": "F7H0D7ZBB",
                                            "size": 1639034,
                                            "original_h": 313,
                                            "thumb_360_w": 360,
                                            "title": "computer.gif",
                                            "url_private": "https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/computer.gif",
                                            "thumb_360": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.png",
                                            "thumb_480": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.png",
                                            "thumb_64": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_64.png",
                                            "ims": [],
                                            "score": "0.38899223746309",
                                            "top_file": false,
                                            "thumb_80": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_80.png",
                                            "thumb_360_h": 225,
                                            "preview": null,
                                            "original_w": 500,
                                            "username": "",
                                            "timestamp": 1507850315,
                                            "public_url_shared": false,
                                            "editable": false,
                                            "thumb_160": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_160.png",
                                            "thumb_480_h": 300,
                                            "thumb_360_gif": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.gif",
                                            "user": "U2U85N1RZ",
                                            "image_exif_rotation": 1,
                                            "is_public": true,
                                            "pretty_type": "GIF",
                                            "is_external": false,
                                            "mimetype": "image/gif",
                                            "permalink_public": "https://slack-files.com/T2U81E2BB-F7H0D7ZBB-85b7f5557e",
                                            "permalink": "https://eventsdemo.slack.com/files/U2U85N1RZ/F7H0D7ZBB/computer.gif",
                                            "name": "computer.gif",
                                            "created": 1507850315,
                                            "url_private_download": "https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/download/computer.gif",
                                            "external_type": "",
                                            "comments_count": 1,
                                            "mode": "hosted",
                                            "deanimate_gif": "https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_deanimate_gif.png"
                                        }
                                    ],
                                    "pagination": {
                                        "last": 3,
                                        "total_count": 3,
                                        "page_count": 1,
                                        "per_page": 20,
                                        "page": 1,
                                        "first": 1
                                    },
                                    "total": 3,
                                    "paging": {
                                        "count": 20,
                                        "total": 3,
                                        "page": 1,
                                        "pages": 1
                                    }
                                },
                                "query": "computer.gif",
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Searches for files matching a query.",
                "parameters": [
                    {
                        "description": "Change sort direction to ascending (`asc`) or descending (`desc`).",
                        "type": "string",
                        "name": "sort_dir",
                        "in": "query"
                    },
                    {
                        "description": "Search query. May contain booleans, etc.",
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "description": "Return matches sorted by either `score` or `timestamp`.",
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "description": "Pass a value of `true` to enable query highlight markers (see below).",
                        "type": "boolean",
                        "name": "highlight",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `search:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "tags": [
                    "search"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "search:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/search.files",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "search_files"
            }
        },
        "/team.accessLogs": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets the access logs for the current team.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `admin`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "description": "End of time range of logs to include in results (inclusive).",
                        "type": "integer",
                        "name": "before",
                        "in": "query"
                    }
                ],
                "tags": [
                    "team"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "admin"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/team.accessLogs",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "team_accessLogs"
            }
        },
        "/groups.invite": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response groups.invite method",
                            "title": "groups.invite error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "user_not_found",
                                        "cant_invite_self",
                                        "is_archived",
                                        "cant_invite",
                                        "ura_max_channels",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response groups.invite method",
                            "title": "groups.invite success schema",
                            "required": [
                                "ok",
                                "group"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "group": {
                                    "$ref": "#/definitions/objs_group"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Invites a user to a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "User to invite.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "Private channel to invite user to.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.invite",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_invite"
            }
        },
        "/chat.meMessage": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "ts": "1417671948.000006",
                                "channel": "C024BE7LR"
                            }
                        }
                    }
                },
                "description": "Share a me message into a channel.",
                "parameters": [
                    {
                        "description": "Text of the message to send.",
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `chat:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "chat"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "chat:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/chat.meMessage",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "chat_meMessage"
            }
        },
        "/rtm.connect": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "url": "wss://...",
                                "self": {
                                    "id": "U4X318ZMZ",
                                    "name": "robotoverlord"
                                },
                                "ok": true,
                                "team": {
                                    "domain": "slackdemo",
                                    "id": "T2U81E2FP",
                                    "name": "SlackDemo"
                                }
                            }
                        }
                    }
                },
                "description": "Starts a Real Time Messaging session.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `rtm:stream`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions).",
                        "type": "boolean",
                        "name": "batch_presence_aware",
                        "in": "query"
                    }
                ],
                "tags": [
                    "rtm"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "rtm:stream"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/rtm.connect",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "rtm_connect"
            }
        },
        "/team.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Gets information about the current team.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `team:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "team"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "team:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/team.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "team_info"
            }
        },
        "/conversations.history": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.history method",
                            "title": "conversations.history error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "missing_scope",
                                        "channel_not_found",
                                        "invalid_ts_latest",
                                        "invalid_ts_oldest",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.history method",
                            "title": "conversations.history success schema",
                            "required": [
                                "ok",
                                "messages",
                                "has_more",
                                "pin_count"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "has_more": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "messages": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/objs_message"
                                    }
                                },
                                "pin_count": {
                                    "type": "integer"
                                }
                            }
                        },
                        "description": "Typical success response containing a channel's messages",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "response_metadata": {
                                    "next_cursor": "bmV4dF90czoxNTAyMTI2Mzk0MjE2NzEw"
                                },
                                "has_more": true,
                                "messages": [
                                    {
                                        "text": "I find you punny and would like to smell your nose letter",
                                        "type": "message",
                                        "user": "U012AB3CDE",
                                        "ts": "1502126499.221215"
                                    },
                                    {
                                        "text": "Isn't this whether dreadful? <https://badpuns.example.com/puns/123>",
                                        "type": "message",
                                        "user": "U061F7AUR",
                                        "ts": "1502126439.218404",
                                        "attachments": [
                                            {
                                                "thumb_height": 700,
                                                "service_icon": "https://badpuns.example.com/puns.png",
                                                "thumb_width": 1920,
                                                "title": "Leg end nary a laugh, Ink.",
                                                "service_name": "Leg end nary a laugh, Ink.",
                                                "title_link": "https://badpuns.example.com/puns/123",
                                                "text": "This is likely a pun about the weather.",
                                                "id": 1,
                                                "fallback": "We're withholding a pun from you",
                                                "thumb_url": "https://badpuns.example.com/puns/123.png",
                                                "from_url": "https://badpuns.example.com/puns/123"
                                            }
                                        ]
                                    }
                                ],
                                "unread_count_display": 0,
                                "pin_count": 0
                            }
                        }
                    }
                },
                "description": "Fetches a conversation's history of messages and events.",
                "parameters": [
                    {
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `conversations:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Start of time range of messages to include in results.",
                        "type": "number",
                        "name": "oldest",
                        "in": "query"
                    },
                    {
                        "description": "Conversation ID to fetch history for.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    },
                    {
                        "description": "End of time range of messages to include in results.",
                        "type": "number",
                        "name": "latest",
                        "in": "query"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:history",
                            "groups:history",
                            "im:history",
                            "mpim:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.history",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "conversations_history"
            }
        },
        "/channels.create": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response channels.create method",
                            "title": "channels.create error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "name_taken",
                                        "restricted_action",
                                        "no_channel",
                                        "invalid_name_required",
                                        "invalid_name_punctuation",
                                        "invalid_name_maxlength",
                                        "invalid_name_specials",
                                        "invalid_name",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Example error response when an invalid name is provided",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "detail": "Value passed for `name` contained unallowed special characters.",
                                "error": "invalid_name_specials"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response channels.create method",
                            "title": "channels.create error schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_channel"
                                }
                            }
                        },
                        "description": "Typical success response resulting in a new channel",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "topic": {
                                        "last_set": 0,
                                        "value": "",
                                        "creator": ""
                                    },
                                    "is_general": false,
                                    "name_normalized": "endeavor",
                                    "name": "endeavor",
                                    "is_channel": true,
                                    "created": 1502833204,
                                    "is_member": true,
                                    "is_mpim": false,
                                    "is_archived": false,
                                    "creator": "U061F7AUR",
                                    "is_org_shared": false,
                                    "unread_count": 0,
                                    "previous_names": [],
                                    "purpose": {
                                        "last_set": 0,
                                        "value": "",
                                        "creator": ""
                                    },
                                    "unread_count_display": 0,
                                    "last_read": "0000000000.000000",
                                    "latest": null,
                                    "members": [
                                        "U061F7AUR"
                                    ],
                                    "id": "C0DEL09A5",
                                    "is_private": false,
                                    "is_shared": false
                                }
                            }
                        }
                    }
                },
                "description": "Creates a channel.",
                "parameters": [
                    {
                        "description": "Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.",
                        "type": "boolean",
                        "name": "validate",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Name of channel to create",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.create",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_create"
            }
        },
        "/im.replies": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Retrieve a thread of messages posted to a direct message conversation",
                "parameters": [
                    {
                        "description": "Unique identifier of a thread's parent message",
                        "type": "number",
                        "name": "thread_ts",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `im:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Direct message channel to fetch thread from",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "im"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "im:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/im.replies",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "im_replies"
            }
        },
        "/groups.create": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response groups.create method",
                            "title": "groups.create error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "no_channel",
                                        "restricted_action",
                                        "name_taken",
                                        "invalid_name_required",
                                        "invalid_name_punctuation",
                                        "invalid_name_maxlength",
                                        "invalid_name_specials",
                                        "invalid_name",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response groups.create method",
                            "title": "groups.create success schema",
                            "required": [
                                "ok",
                                "group"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "group": {
                                    "$ref": "#/definitions/objs_group"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Creates a private channel.",
                "parameters": [
                    {
                        "description": "Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.",
                        "type": "boolean",
                        "name": "validate",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Name of private channel to create",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.create",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_create"
            }
        },
        "/reminders.add": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Creates a reminder.",
                "parameters": [
                    {
                        "description": "The content of the reminder",
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `reminders:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")",
                        "type": "string",
                        "name": "time",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "reminders"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reminders:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reminders.add",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "reminders_add"
            }
        },
        "/channels.join": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "already_in_channel": true,
                                "ok": true,
                                "channel": {
                                    "topic": {
                                        "last_set": 1503435128,
                                        "value": "My Topic",
                                        "creator": "U0G9QF9C6"
                                    },
                                    "is_general": false,
                                    "name_normalized": "busting",
                                    "name": "busting",
                                    "is_channel": true,
                                    "created": 1466025154,
                                    "is_member": true,
                                    "is_mpim": false,
                                    "is_archived": false,
                                    "creator": "U0G9QF9C6",
                                    "is_org_shared": false,
                                    "previous_names": [],
                                    "purpose": {
                                        "last_set": 1503435128,
                                        "value": "My Purpose",
                                        "creator": "U0G9QF9C6"
                                    },
                                    "members": [
                                        "U0G9QF9C6",
                                        "U1QNSQB9U"
                                    ],
                                    "id": "C1H9RESGL",
                                    "is_private": false,
                                    "is_shared": false
                                }
                            }
                        }
                    }
                },
                "description": "Joins a channel, creating it if needed.",
                "parameters": [
                    {
                        "description": "Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.",
                        "type": "boolean",
                        "name": "validate",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Name of channel to join",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.join",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_join"
            }
        },
        "/usergroups.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "usergroups": [
                                    {
                                        "is_external": false,
                                        "handle": "admins",
                                        "description": "A group of all Administrators on your team.",
                                        "date_delete": 0,
                                        "date_update": 1446670362,
                                        "created_by": "USLACKBOT",
                                        "deleted_by": null,
                                        "date_create": 1446598059,
                                        "team_id": "T060RNRCH",
                                        "updated_by": "U060RNRCZ",
                                        "user_count": "2",
                                        "auto_type": "admin",
                                        "prefs": {
                                            "channels": [],
                                            "groups": []
                                        },
                                        "is_usergroup": true,
                                        "id": "S0614TZR7",
                                        "name": "Team Admins"
                                    },
                                    {
                                        "is_external": false,
                                        "handle": "owners",
                                        "description": "A group of all Owners on your team.",
                                        "date_delete": 0,
                                        "date_update": 1446678371,
                                        "created_by": "USLACKBOT",
                                        "deleted_by": null,
                                        "date_create": 1446678371,
                                        "team_id": "T060RNRCH",
                                        "updated_by": "USLACKBOT",
                                        "user_count": "1",
                                        "auto_type": "owner",
                                        "prefs": {
                                            "channels": [],
                                            "groups": []
                                        },
                                        "is_usergroup": true,
                                        "id": "S06158AV7",
                                        "name": "Team Owners"
                                    },
                                    {
                                        "is_external": false,
                                        "handle": "marketing-team",
                                        "description": "Marketing gurus, PR experts and product advocates.",
                                        "date_delete": 1446748865,
                                        "date_update": 1446747767,
                                        "created_by": "U060RNRCZ",
                                        "deleted_by": null,
                                        "date_create": 1446746793,
                                        "team_id": "T060RNRCH",
                                        "updated_by": "U060RNRCZ",
                                        "user_count": "0",
                                        "auto_type": null,
                                        "prefs": {
                                            "channels": [],
                                            "groups": []
                                        },
                                        "is_usergroup": true,
                                        "id": "S0615G0KT",
                                        "name": "Marketing Team"
                                    }
                                ],
                                "ok": true
                            }
                        }
                    }
                },
                "description": "List all User Groups for a team",
                "parameters": [
                    {
                        "description": "Include the list of users for each User Group.",
                        "type": "boolean",
                        "name": "include_users",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `usergroups:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Include the number of users in each User Group.",
                        "type": "boolean",
                        "name": "include_count",
                        "in": "query"
                    },
                    {
                        "description": "Include disabled User Groups.",
                        "type": "boolean",
                        "name": "include_disabled",
                        "in": "query"
                    }
                ],
                "tags": [
                    "usergroups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "usergroups:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/usergroups.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "usergroups_list"
            }
        },
        "/users.profile.get": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "user_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "profile": {
                                    "display_name": "spengler",
                                    "status_emoji": ":books:",
                                    "team": "T012AB3C4",
                                    "real_name": "Egon Spengler",
                                    "image_24": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "real_name_normalized": "Egon Spengler",
                                    "image_512": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "display_name_normalized": "spengler",
                                    "image_32": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "image_48": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "image_72": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                    "avatar_hash": "ge3b51ca72de",
                                    "status_text": "Print is dead",
                                    "email": "spengler@ghostbusters.example.com",
                                    "image_192": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg"
                                },
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Retrieves a user's profile information.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `users.profile:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Include labels for each ID in custom profile fields",
                        "type": "boolean",
                        "name": "include_labels",
                        "in": "query"
                    },
                    {
                        "description": "User to retrieve profile info for",
                        "type": "string",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "tags": [
                    "users.profile",
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users.profile:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.profile.get",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "users_profile_get"
            }
        },
        "/groups.open": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Opens a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Private channel to open.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.open",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_open"
            }
        },
        "/emoji.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists custom emoji for a team.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `emoji:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "emoji"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "emoji:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/emoji.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "emoji_list"
            }
        },
        "/conversations.info": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.info method",
                            "title": "conversations.info error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "missing_scope",
                                        "channel_not_found",
                                        "team_added_to_org",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response when a channel cannot be found",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response conversations.info",
                            "title": "conversations.info success schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                }
                            }
                        },
                        "description": "Typical success response for a public channel",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "is_general": true,
                                    "name_normalized": "general",
                                    "is_channel": true,
                                    "creator": "W012A3BCD",
                                    "is_member": true,
                                    "is_archived": false,
                                    "topic": {
                                        "last_set": 1449709364,
                                        "value": "For public discussion of generalities",
                                        "creator": "W012A3BCD"
                                    },
                                    "is_im": false,
                                    "is_ext_shared": false,
                                    "previous_names": [
                                        "specifics",
                                        "abstractions",
                                        "etc"
                                    ],
                                    "last_read": "1502126650.228446",
                                    "id": "C012AB3CD",
                                    "is_org_shared": false,
                                    "locale": "en-US",
                                    "is_pending_ext_shared": false,
                                    "is_mpim": false,
                                    "is_group": false,
                                    "is_read_only": false,
                                    "purpose": {
                                        "last_set": 1449709364,
                                        "value": "This part of the workspace is for fun. Make fun here.",
                                        "creator": "W012A3BCD"
                                    },
                                    "is_private": false,
                                    "is_shared": false,
                                    "num_members": 23,
                                    "name": "general",
                                    "created": 1449252889,
                                    "pending_shared": [],
                                    "unlinked": 0
                                }
                            }
                        }
                    }
                },
                "description": "Retrieve information about a conversation.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Conversation ID to learn more about",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    },
                    {
                        "description": "Set this to `true` to receive the locale for this conversation. Defaults to `false`",
                        "type": "boolean",
                        "name": "include_locale",
                        "in": "query"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:read",
                            "groups:read",
                            "im:read",
                            "mpim:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.info",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "conversations_info"
            }
        },
        "/channels.unarchive": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Unarchives a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel to unarchive",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.unarchive",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_unarchive"
            }
        },
        "/dnd.endSnooze": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Ends the current user's snooze mode immediately.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `dnd:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    }
                ],
                "tags": [
                    "dnd"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "dnd:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/dnd.endSnooze",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "dnd_endSnooze"
            }
        },
        "/groups.history": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response groups.history method",
                            "title": "groups.history error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "invalid_ts_latest",
                                        "invalid_ts_oldest",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response groups.history method",
                            "title": "groups.history success schema",
                            "required": [
                                "ok",
                                "messages",
                                "has_more"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "has_more": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "messages": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/objs_message"
                                    }
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Fetches history of messages and events from a private channel.",
                "parameters": [
                    {
                        "description": "Number of messages to return, between 1 and 1000.",
                        "type": "integer",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Include `unread_count_display` in the output?",
                        "type": "boolean",
                        "name": "unreads",
                        "in": "query"
                    },
                    {
                        "description": "Include messages with latest or oldest timestamp in results.",
                        "type": "boolean",
                        "name": "inclusive",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `groups:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Start of time range of messages to include in results.",
                        "type": "number",
                        "name": "oldest",
                        "in": "query"
                    },
                    {
                        "description": "Private channel to fetch history for.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    },
                    {
                        "description": "End of time range of messages to include in results.",
                        "type": "number",
                        "name": "latest",
                        "in": "query"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.history",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "groups_history"
            }
        },
        "/search.messages": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "No query passed"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "messages": {
                                    "matches": [
                                        {
                                            "username": "roach",
                                            "permalink": "https://hitchhikers.slack.com/archives/C12345678/p1508284197000015",
                                            "text": "The meaning of life the universe and everything is 42.",
                                            "ts": "1508284197.000015",
                                            "iid": "cb64bdaa-c1e8-4631-8a91-0f78080113e9",
                                            "user": "U2U85N1RV",
                                            "team": "T12345678",
                                            "type": "message",
                                            "channel": {
                                                "is_pending_ext_shared": false,
                                                "is_shared": false,
                                                "is_mpim": false,
                                                "pending_shared": [],
                                                "is_ext_shared": false,
                                                "is_org_shared": false,
                                                "id": "C12345678",
                                                "is_private": false,
                                                "name": "general"
                                            }
                                        },
                                        {
                                            "username": "robot overlord",
                                            "permalink": "https://hitchhikers.slack.com/archives/C12345678/p1508795665000236",
                                            "text": "The meaning of life the universe and everything is 101010",
                                            "ts": "1508795665.000236",
                                            "iid": "9a00d3c9-bd2d-45b0-988b-6cff99ae2a90",
                                            "user": "",
                                            "team": "T12345678",
                                            "type": "message",
                                            "channel": {
                                                "is_pending_ext_shared": false,
                                                "is_shared": false,
                                                "is_mpim": false,
                                                "pending_shared": [],
                                                "is_ext_shared": false,
                                                "is_org_shared": false,
                                                "id": "C12345678",
                                                "is_private": false,
                                                "name": "random"
                                            }
                                        }
                                    ],
                                    "pagination": {
                                        "last": 2,
                                        "total_count": 2,
                                        "page_count": 1,
                                        "per_page": 20,
                                        "page": 1,
                                        "first": 1
                                    },
                                    "total": 2,
                                    "paging": {
                                        "count": 20,
                                        "total": 2,
                                        "page": 1,
                                        "pages": 1
                                    }
                                },
                                "query": "The meaning of life the universe and everything"
                            }
                        }
                    }
                },
                "description": "Searches for messages matching a query.",
                "parameters": [
                    {
                        "description": "Change sort direction to ascending (`asc`) or descending (`desc`).",
                        "type": "string",
                        "name": "sort_dir",
                        "in": "query"
                    },
                    {
                        "description": "Search query. May contains booleans, etc.",
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "description": "Return matches sorted by either `score` or `timestamp`.",
                        "type": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `search:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Pass a value of `true` to enable query highlight markers (see below).",
                        "type": "boolean",
                        "name": "highlight",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "tags": [
                    "search"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "search:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/search.messages",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "search_messages"
            }
        },
        "/rtm.start": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Starts a Real Time Messaging session.",
                "parameters": [
                    {
                        "description": "Exclude latest timestamps for channels, groups, mpims, and ims. Automatically sets `no_unreads` to `1`",
                        "type": "boolean",
                        "name": "no_latest",
                        "in": "query"
                    },
                    {
                        "description": "Return timestamp only for latest message object of each channel (improves performance).",
                        "type": "boolean",
                        "name": "simple_latest",
                        "in": "query"
                    },
                    {
                        "description": "Set this to `true` to receive the locale for users and channels. Defaults to `false`",
                        "type": "boolean",
                        "name": "include_locale",
                        "in": "query"
                    },
                    {
                        "description": "Skip unread counts for each channel (improves performance).",
                        "type": "boolean",
                        "name": "no_unreads",
                        "in": "query"
                    },
                    {
                        "description": "Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions).",
                        "type": "boolean",
                        "name": "batch_presence_aware",
                        "in": "query"
                    },
                    {
                        "description": "Returns MPIMs to the client in the API response.",
                        "type": "boolean",
                        "name": "mpim_aware",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `rtm:stream`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "rtm"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "rtm:stream"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/rtm.start",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "rtm_start"
            }
        },
        "/channels.setTopic": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "topic": "To picture topicality",
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the topic for a channel.",
                "parameters": [
                    {
                        "description": "The new topic",
                        "type": "string",
                        "name": "topic",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel to set the topic of",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.setTopic",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_setTopic"
            }
        },
        "/groups.setTopic": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the topic for a private channel.",
                "parameters": [
                    {
                        "description": "The new topic",
                        "type": "string",
                        "name": "topic",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Private channel to set the topic of",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.setTopic",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_setTopic"
            }
        },
        "/mpim.open": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from mpim.open method",
                            "title": "mpim.open error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "users_list_not_supplied",
                                        "not_enough_users",
                                        "too_many_users",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "no_permission",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from mpim.open method",
                            "title": "mpim.open success schema",
                            "required": [
                                "ok",
                                "group"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "group": {
                                    "$ref": "#/definitions/objs_group"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "id": "D024BFF1M"
                                }
                            }
                        }
                    }
                },
                "description": "This method opens a multiparty direct message.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `mpim:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Comma separated lists of users.  The ordering of the users is preserved whenever a MPIM group is returned.",
                        "type": "string",
                        "name": "users",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "mpim"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/mpim.open",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "mpim_open"
            }
        },
        "/reactions.remove": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "no_reaction"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Removes a reaction from an item.",
                "parameters": [
                    {
                        "description": "Reaction (emoji) name.",
                        "type": "string",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "description": "File comment to remove reaction from.",
                        "type": "string",
                        "name": "file_comment",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to remove reaction from.",
                        "type": "number",
                        "name": "timestamp",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `reactions:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "File to remove reaction from.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "description": "Channel where the message to remove reaction from was posted.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "reactions"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reactions:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reactions.remove",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "reactions_remove"
            }
        },
        "/reminders.delete": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Deletes a reminder.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `reminders:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The ID of the reminder",
                        "type": "string",
                        "name": "reminder",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "reminders"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "reminders:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/reminders.delete",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "reminders_delete"
            }
        },
        "/usergroups.disable": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Disable an existing User Group",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `usergroups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Include the number of users in the User Group.",
                        "type": "boolean",
                        "name": "include_count",
                        "in": "formData"
                    },
                    {
                        "description": "The encoded ID of the User Group to disable.",
                        "type": "string",
                        "name": "usergroup",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "usergroups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "usergroups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/usergroups.disable",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "usergroups_disable"
            }
        },
        "/files.comments.add": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from files.comments.add method",
                            "title": "files.comments.edit error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "file_not_found",
                                        "file_deleted",
                                        "no_comment",
                                        "cant_add",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Artificial error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "file_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response files.comments.add method",
                            "title": "files.comments.add schema",
                            "required": [
                                "ok",
                                "comment"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "$ref": "#/definitions/objs_comment"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Standard success response",
                        "examples": {
                            "application/json": {
                                "comment": {
                                    "comment": "Everyone should take a moment to read this file.",
                                    "created": 1356032811,
                                    "timestamp": 1356032811,
                                    "user": "U1234567890",
                                    "id": "Fc1234567890",
                                    "channel": "C1234467890"
                                },
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Add a comment to an existing file.",
                "parameters": [
                    {
                        "description": "Text of the comment to add.",
                        "type": "string",
                        "name": "comment",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `files:write:user`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "File to add a comment to.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "files.comments",
                    "files"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "files:write:user"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/files.comments.add",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "files_comments_add"
            }
        },
        "/im.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from im.list method",
                            "title": "im.list error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "invalid_cursor",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "no_permission",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response im.list method",
                            "title": "im.list success schema",
                            "required": [
                                "ok",
                                "ims"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ims": {
                                    "uniqueItems": true,
                                    "items": {
                                        "$ref": "#/definitions/objs_im"
                                    },
                                    "type": "array"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ims": [
                                    {
                                        "created": 1449709280,
                                        "is_user_deleted": false,
                                        "is_org_shared": false,
                                        "user": "USLACKBOT",
                                        "is_im": true,
                                        "id": "D0G9QPY56"
                                    },
                                    {
                                        "created": 1466692204,
                                        "is_user_deleted": false,
                                        "is_org_shared": false,
                                        "user": "U0G9QF9C6",
                                        "is_im": true,
                                        "id": "D1KL59A72"
                                    },
                                    {
                                        "created": 1449722883,
                                        "is_user_deleted": false,
                                        "is_org_shared": false,
                                        "user": "U0G9WFXNZ",
                                        "is_im": true,
                                        "id": "D0G9XPFH9"
                                    },
                                    {
                                        "created": 1452098023,
                                        "is_user_deleted": false,
                                        "is_org_shared": false,
                                        "user": "W0HRJL7CK",
                                        "is_im": true,
                                        "id": "D0HRHJSF7"
                                    },
                                    {
                                        "created": 1465834222,
                                        "is_user_deleted": true,
                                        "is_org_shared": false,
                                        "user": "U1GDBDGR3",
                                        "is_im": true,
                                        "id": "D1GD7CHC0"
                                    },
                                    {
                                        "created": 1468274703,
                                        "is_user_deleted": false,
                                        "is_org_shared": false,
                                        "user": "U1QNSQB9U",
                                        "is_im": true,
                                        "id": "D1QMF76M9"
                                    },
                                    {
                                        "created": 1502210225,
                                        "is_user_deleted": false,
                                        "is_org_shared": false,
                                        "user": "U6KR7BVFW",
                                        "is_im": true,
                                        "id": "D6K48KKRN"
                                    }
                                ],
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists direct message channels for the calling user.",
                "parameters": [
                    {
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `im:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "tags": [
                    "im"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "im:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/im.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "im_list"
            }
        },
        "/channels.setPurpose": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "purpose": "My special purpose"
                            }
                        }
                    }
                },
                "description": "Sets the purpose for a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The new purpose",
                        "type": "string",
                        "name": "purpose",
                        "in": "formData"
                    },
                    {
                        "description": "Channel to set the purpose of",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.setPurpose",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_setPurpose"
            }
        },
        "/mpim.replies": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Retrieve a thread of messages posted to a direct message conversation from a multiparty direct message.",
                "parameters": [
                    {
                        "description": "Unique identifier of a thread's parent message.",
                        "type": "number",
                        "name": "thread_ts",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `mpim:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Multiparty direct message channel to fetch thread from.",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "mpim"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "mpim:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/mpim.replies",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "mpim_replies"
            }
        },
        "/dialog.open": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Open a dialog with a user",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `none`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The dialog definition. This must be a JSON-encoded string.",
                        "type": "string",
                        "name": "dialog",
                        "in": "query"
                    },
                    {
                        "description": "Exchange a trigger to post to the user.",
                        "type": "string",
                        "name": "trigger_id",
                        "in": "query"
                    }
                ],
                "tags": [
                    "dialog"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/dialog.open",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "dialog_open"
            }
        },
        "/dnd.teamInfo": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from dnd.teamInfo method",
                            "title": "dnd.teamInfo error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from dnd.teamInfo method",
                            "title": "dnd.teamInfo success schema",
                            "required": [
                                "ok",
                                "users"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "cached": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "users": {
                                    "additionalProperties": true,
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "users": {
                                    "W058CJVAA": {
                                        "dnd_enabled": false,
                                        "next_dnd_end_ts": 1,
                                        "next_dnd_start_ts": 1
                                    },
                                    "U023BECGF": {
                                        "dnd_enabled": true,
                                        "next_dnd_end_ts": 1450423800,
                                        "next_dnd_start_ts": 1450387800
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Retrieves the Do Not Disturb status for users on a team.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `dnd:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Comma-separated list of users to fetch Do Not Disturb status for",
                        "type": "string",
                        "name": "users",
                        "in": "query"
                    }
                ],
                "tags": [
                    "dnd"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "dnd:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/dnd.teamInfo",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "dnd_teamInfo"
            }
        },
        "/users.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_cursor"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "cache_ts": 1498777272,
                                "ok": true,
                                "response_metadata": {
                                    "next_cursor": "dXNlcjpVMEc5V0ZYTlo="
                                },
                                "members": [
                                    {
                                        "profile": {
                                            "display_name": "spengler",
                                            "status_emoji": ":books:",
                                            "team": "T012AB3C4",
                                            "real_name": "Egon Spengler",
                                            "image_24": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "real_name_normalized": "Egon Spengler",
                                            "image_512": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "display_name_normalized": "spengler",
                                            "image_32": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_48": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "image_72": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg",
                                            "avatar_hash": "ge3b51ca72de",
                                            "status_text": "Print is dead",
                                            "email": "spengler@ghostbusters.example.com",
                                            "image_192": "https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg"
                                        },
                                        "updated": 1502138686,
                                        "tz": "America/Los_Angeles",
                                        "name": "spengler",
                                        "deleted": false,
                                        "is_app_user": false,
                                        "is_bot": false,
                                        "tz_label": "Pacific Daylight Time",
                                        "real_name": "spengler",
                                        "color": "9f69e7",
                                        "team_id": "T012AB3C4",
                                        "is_admin": true,
                                        "is_ultra_restricted": false,
                                        "is_restricted": false,
                                        "is_owner": false,
                                        "tz_offset": -25200,
                                        "has_2fa": false,
                                        "id": "W012A3CDE",
                                        "is_primary_owner": false
                                    },
                                    {
                                        "profile": {
                                            "first_name": "Glinda",
                                            "last_name": "Southgood",
                                            "display_name": "Glinda the Fairly Good",
                                            "title": "Glinda the Good",
                                            "image_1024": "https://a.slack-edge.com...png",
                                            "skype": "",
                                            "phone": "",
                                            "real_name": "Glinda Southgood",
                                            "image_24": "https://a.slack-edge.com...png",
                                            "image_original": "https://a.slack-edge.com...png",
                                            "real_name_normalized": "Glinda Southgood",
                                            "image_512": "https://a.slack-edge.com...png",
                                            "image_32": "https://a.slack-edge.com...png",
                                            "image_48": "https://a.slack-edge.com...png",
                                            "image_72": "https://a.slack-edge.com...png",
                                            "avatar_hash": "8fbdd10b41c6",
                                            "display_name_normalized": "Glinda the Fairly Good",
                                            "email": "glenda@south.oz.coven",
                                            "image_192": "https://a.slack-edge.com...png"
                                        },
                                        "updated": 1480527098,
                                        "tz": "America/Los_Angeles",
                                        "name": "glinda",
                                        "deleted": false,
                                        "is_bot": false,
                                        "tz_label": "Pacific Daylight Time",
                                        "real_name": "Glinda Southgood",
                                        "color": "9f69e7",
                                        "team_id": "T0G9PQBBK",
                                        "is_admin": true,
                                        "is_ultra_restricted": false,
                                        "is_restricted": false,
                                        "is_owner": false,
                                        "tz_offset": -25200,
                                        "has_2fa": false,
                                        "id": "W07QCRPA4",
                                        "is_primary_owner": false
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Lists all users in a Slack team.",
                "parameters": [
                    {
                        "description": "Whether to include presence data in the output. Setting this to `false` improves performance, especially with large teams.",
                        "type": "boolean",
                        "name": "presence",
                        "in": "query"
                    },
                    {
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `users:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Set this to `true` to receive the locale for users. Defaults to `false`",
                        "type": "boolean",
                        "name": "include_locale",
                        "in": "query"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "users_list"
            }
        },
        "/conversations.invite": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.invite method",
                            "title": "conversations.invite error schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "provided": {
                                    "type": "string"
                                },
                                "errors": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "title": "errors is returned when an error associates an user",
                                    "type": "array",
                                    "items": {
                                        "additionalProperties": true,
                                        "required": [
                                            "ok",
                                            "error"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "ok": {
                                                "$ref": "#/definitions/defs_ok_false"
                                            },
                                            "user": {
                                                "$ref": "#/definitions/defs_user"
                                            },
                                            "error": {
                                                "enum": [
                                                    "method_not_supported_for_channel_type",
                                                    "missing_scope",
                                                    "channel_not_found",
                                                    "user_not_found",
                                                    "cant_invite_self",
                                                    "not_in_channel",
                                                    "already_in_channel",
                                                    "is_archived",
                                                    "cant_invite",
                                                    "too_many_users",
                                                    "ura_max_channels",
                                                    "not_authed",
                                                    "invalid_auth",
                                                    "account_inactive",
                                                    "user_is_bot",
                                                    "user_is_restricted",
                                                    "user_is_ultra_restricted",
                                                    "invalid_arg_name",
                                                    "invalid_array_arg",
                                                    "invalid_charset",
                                                    "invalid_form_data",
                                                    "invalid_post_type",
                                                    "missing_post_type",
                                                    "invalid_json",
                                                    "json_not_object",
                                                    "request_timeout",
                                                    "upgrade_required",
                                                    "team_added_to_org",
                                                    "missing_charset",
                                                    "superfluous_charset"
                                                ],
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "channel_not_found",
                                        "user_not_found",
                                        "cant_invite_self",
                                        "not_in_channel",
                                        "already_in_channel",
                                        "is_archived",
                                        "cant_invite",
                                        "too_many_users",
                                        "ura_max_channels",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                },
                                "needed": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response when an invite is attempted on a conversation type that does not support it",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "method_not_supported_for_channel_type"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.invite method",
                            "title": "conversations.invite error schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_conversation"
                                }
                            }
                        },
                        "description": "Typical success response when an invitation is extended",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "is_general": true,
                                    "name_normalized": "general",
                                    "is_channel": true,
                                    "creator": "W012A3BCD",
                                    "is_member": true,
                                    "is_archived": false,
                                    "topic": {
                                        "last_set": 1449709364,
                                        "value": "For public discussion of generalities",
                                        "creator": "W012A3BCD"
                                    },
                                    "is_im": false,
                                    "is_ext_shared": false,
                                    "previous_names": [
                                        "specifics",
                                        "abstractions",
                                        "etc"
                                    ],
                                    "last_read": "1502126650.228446",
                                    "id": "C012AB3CD",
                                    "is_org_shared": false,
                                    "locale": "en-US",
                                    "is_pending_ext_shared": false,
                                    "is_mpim": false,
                                    "is_group": false,
                                    "is_read_only": false,
                                    "purpose": {
                                        "last_set": 1449709364,
                                        "value": "This part of the workspace is for fun. Make fun here.",
                                        "creator": "W012A3BCD"
                                    },
                                    "is_private": false,
                                    "is_shared": false,
                                    "num_members": 23,
                                    "name": "general",
                                    "created": 1449252889,
                                    "pending_shared": [],
                                    "unlinked": 0
                                }
                            }
                        }
                    }
                },
                "description": "Invites users to a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "A comma separated list of user IDs. Up to 30 users may be listed.",
                        "type": "string",
                        "name": "users",
                        "in": "formData"
                    },
                    {
                        "description": "The ID of the public or private channel to invite user(s) to.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.invite",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_invite"
            }
        },
        "/auth.test": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response auth.test method",
                            "title": "auth.test error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Standard failure response when used with an invalid token",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response auth.test method",
                            "title": "auth.test success schema",
                            "required": [
                                "ok",
                                "url",
                                "team",
                                "user",
                                "team_id",
                                "user_id"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "url": {
                                    "type": "string"
                                },
                                "team_id": {
                                    "$ref": "#/definitions/defs_team"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "team": {
                                    "type": "string"
                                },
                                "user_id": {
                                    "$ref": "#/definitions/defs_user"
                                }
                            }
                        },
                        "description": "Standard success response when used with a user token",
                        "examples": {
                            "application/json": {
                                "user_id": "W12345678",
                                "url": "https://subarachnoid.slack.com/",
                                "team_id": "T12345678",
                                "user": "grace",
                                "team": "Subarachnoid Workspace",
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Checks authentication & identity.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `none`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    }
                ],
                "tags": [
                    "auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/auth.test",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "auth_test"
            }
        },
        "/channels.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response channels.list method",
                            "title": "channels.list error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response channels.list method",
                            "title": "channels.list success schema",
                            "required": [
                                "ok",
                                "channels"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "channels": {
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/objs_channel"
                                    }
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical cursored success response",
                        "examples": {
                            "application/json": {
                                "channels": [
                                    {
                                        "topic": {
                                            "last_set": 1449709352,
                                            "value": "Other stuff",
                                            "creator": "U0G9QF9C6"
                                        },
                                        "is_general": false,
                                        "name_normalized": "random",
                                        "name": "random",
                                        "is_channel": true,
                                        "created": 1449709280,
                                        "is_member": true,
                                        "is_mpim": false,
                                        "is_archived": false,
                                        "creator": "U0G9QF9C6",
                                        "is_org_shared": false,
                                        "previous_names": [],
                                        "num_members": 2,
                                        "purpose": {
                                            "last_set": 0,
                                            "value": "A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.",
                                            "creator": ""
                                        },
                                        "members": [
                                            "U0G9QF9C6",
                                            "U0G9WFXNZ"
                                        ],
                                        "id": "C0G9QF9GW",
                                        "is_private": false,
                                        "is_shared": false
                                    },
                                    {
                                        "topic": {
                                            "last_set": 1449709364,
                                            "value": "Talk about anything!",
                                            "creator": "U0G9QF9C6"
                                        },
                                        "is_general": true,
                                        "name_normalized": "general",
                                        "name": "general",
                                        "is_channel": true,
                                        "created": 1449709280,
                                        "is_member": true,
                                        "is_mpim": false,
                                        "is_archived": false,
                                        "creator": "U0G9QF9C6",
                                        "is_org_shared": false,
                                        "previous_names": [],
                                        "num_members": 2,
                                        "purpose": {
                                            "last_set": 1449709334,
                                            "value": "To talk about anything!",
                                            "creator": "U0G9QF9C6"
                                        },
                                        "members": [
                                            "U0G9QF9C6",
                                            "U0G9WFXNZ"
                                        ],
                                        "id": "C0G9QKBBL",
                                        "is_private": false,
                                        "is_shared": false
                                    }
                                ],
                                "ok": true,
                                "response_metadata": {
                                    "next_cursor": "dGVhbTpDMUg5UkVTR0w="
                                }
                            }
                        }
                    }
                },
                "description": "Lists all channels in a Slack team.",
                "parameters": [
                    {
                        "description": "Exclude the `members` collection from each `channel`",
                        "type": "boolean",
                        "name": "exclude_members",
                        "in": "query"
                    },
                    {
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `channels:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Exclude archived channels from the list",
                        "type": "boolean",
                        "name": "exclude_archived",
                        "in": "query"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "channels_list"
            }
        },
        "/groups.setPurpose": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Sets the purpose for a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "The new purpose",
                        "type": "string",
                        "name": "purpose",
                        "in": "formData"
                    },
                    {
                        "description": "Private channel to set the purpose of",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.setPurpose",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_setPurpose"
            }
        },
        "/channels.invite": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response channels.invite method",
                            "title": "channels.invite error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "user_not_found",
                                        "cant_invite_self",
                                        "not_in_channel",
                                        "already_in_channel",
                                        "is_archived",
                                        "cant_invite",
                                        "too_many_users",
                                        "ura_max_channels",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "A somewhat typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "cant_invite"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response channels.invite method",
                            "title": "channels.invite error schema",
                            "required": [
                                "ok",
                                "channel"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "channel": {
                                    "$ref": "#/definitions/objs_channel"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true,
                                "channel": {
                                    "topic": {
                                        "last_set": 1503435128,
                                        "value": "My Topic",
                                        "creator": "U0G9QF9C6"
                                    },
                                    "is_general": false,
                                    "name_normalized": "busting",
                                    "name": "busting",
                                    "is_channel": true,
                                    "created": 1466025154,
                                    "is_member": true,
                                    "is_mpim": false,
                                    "is_archived": false,
                                    "creator": "U0G9QF9C6",
                                    "is_org_shared": false,
                                    "unread_count": 0,
                                    "previous_names": [],
                                    "purpose": {
                                        "last_set": 1503435128,
                                        "value": "My Purpose",
                                        "creator": "U0G9QF9C6"
                                    },
                                    "unread_count_display": 0,
                                    "last_read": "1503435963.000307",
                                    "latest": {
                                        "text": "<@U1QNSQB9U|protobot> has left the channel",
                                        "type": "message",
                                        "user": "U1QNSQB9U",
                                        "ts": "1503435963.000307",
                                        "subtype": "channel_leave"
                                    },
                                    "members": [
                                        "U0G9QF9C6",
                                        "U1QNSQB9U"
                                    ],
                                    "id": "C1H9RESGL",
                                    "is_private": false,
                                    "is_shared": false
                                }
                            }
                        }
                    }
                },
                "description": "Invites a user to a channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `channels:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "User to invite to channel.",
                        "type": "string",
                        "name": "user",
                        "in": "formData"
                    },
                    {
                        "description": "Channel to invite user to.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.invite",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "channels_invite"
            }
        },
        "/oauth.access": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Exchanges a temporary OAuth code for an API token.",
                "parameters": [
                    {
                        "description": "Issued when you created your application.",
                        "type": "string",
                        "name": "client_secret",
                        "in": "query"
                    },
                    {
                        "description": "The `code` param returned via the OAuth callback.",
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "description": "Issued when you created your application.",
                        "type": "string",
                        "name": "client_id",
                        "in": "query"
                    },
                    {
                        "description": "This must match the originally submitted URI (if one was sent).",
                        "type": "string",
                        "name": "redirect_uri",
                        "in": "query"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "none"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/oauth.access",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "oauth_access"
            }
        },
        "/mpim.list": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Lists multiparty direct message channels for the calling user.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `mpim:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "tags": [
                    "mpim"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "mpim:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/mpim.list",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "mpim_list"
            }
        },
        "/groups.unarchive": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Unarchives a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Private channel to unarchive",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.unarchive",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_unarchive"
            }
        },
        "/channels.replies": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "thread_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "has_more": false,
                                "ok": true,
                                "messages": [
                                    {
                                        "thread_ts": "1485913694.000025",
                                        "last_read": "1509484885.000082",
                                        "subscribed": true,
                                        "text": "This is a channel message",
                                        "ts": "1485913694.000025",
                                        "unread_count": 0,
                                        "reply_count": 2,
                                        "user": "U2X9P5FEL",
                                        "replies": [
                                            {
                                                "ts": "1509484424.000601",
                                                "user": "U2U85N1RZ"
                                            },
                                            {
                                                "ts": "1509484885.000082",
                                                "user": "U2U85N1RZ"
                                            }
                                        ],
                                        "type": "message"
                                    },
                                    {
                                        "thread_ts": "1485913694.000025",
                                        "text": "This is a thread reply",
                                        "ts": "1509484424.000601",
                                        "user": "U2U85N1RZ",
                                        "parent_user_id": "U2X9P5FEL",
                                        "type": "message"
                                    },
                                    {
                                        "thread_ts": "1485913694.000025",
                                        "text": "This is another thread reply",
                                        "ts": "1509484885.000082",
                                        "user": "U2U85N1RZ",
                                        "parent_user_id": "U2X9P5FEL",
                                        "type": "message"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Retrieve a thread of messages posted to a channel",
                "parameters": [
                    {
                        "description": "Unique identifier of a thread's parent message",
                        "type": "number",
                        "name": "thread_ts",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `channels:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Channel to fetch thread from",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "channels"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/channels.replies",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "channels_replies"
            }
        },
        "/chat.postMessage": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response chat.postMessage method",
                            "title": "chat.postMessage error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "channel_not_found",
                                        "not_in_channel",
                                        "is_archived",
                                        "msg_too_long",
                                        "no_text",
                                        "too_many_attachments",
                                        "rate_limited",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response if too many attachments are included",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "too_many_attachments"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response of chat.postMessage method",
                            "title": "chat.postMessage success schema",
                            "required": [
                                "ok",
                                "channel",
                                "ts",
                                "message"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "message": {
                                    "$ref": "#/definitions/objs_message"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "ts": {
                                    "$ref": "#/definitions/defs_ts"
                                },
                                "channel": {
                                    "$ref": "#/definitions/defs_channel"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "message": {
                                    "username": "ecto1",
                                    "attachments": [
                                        {
                                            "text": "This is an attachment",
                                            "fallback": "This is an attachment's fallback",
                                            "id": 1
                                        }
                                    ],
                                    "text": "Here's a message for you",
                                    "ts": "1503435956.000247",
                                    "subtype": "bot_message",
                                    "type": "message",
                                    "bot_id": "B19LU7CSY"
                                },
                                "ok": true,
                                "ts": "1503435956.000247",
                                "channel": "C1H9RESGL"
                            }
                        }
                    }
                },
                "description": "Sends a message to a channel.",
                "parameters": [
                    {
                        "description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
                        "type": "string",
                        "name": "username",
                        "in": "formData"
                    },
                    {
                        "description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
                        "type": "number",
                        "name": "thread_ts",
                        "in": "formData"
                    },
                    {
                        "description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
                        "type": "string",
                        "name": "attachments",
                        "in": "formData"
                    },
                    {
                        "description": "Pass true to enable unfurling of primarily text-based content.",
                        "type": "boolean",
                        "name": "unfurl_links",
                        "in": "formData"
                    },
                    {
                        "description": "Text of the message to send. See below for an explanation of [formatting](#formatting). This field is usually required, unless you're providing only `attachments` instead.",
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "description": "Pass false to disable unfurling of media content.",
                        "type": "boolean",
                        "name": "unfurl_media",
                        "in": "formData"
                    },
                    {
                        "description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
                        "type": "string",
                        "name": "parse",
                        "in": "formData"
                    },
                    {
                        "description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below.",
                        "type": "boolean",
                        "name": "as_user",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `chat:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
                        "type": "string",
                        "name": "icon_emoji",
                        "in": "formData"
                    },
                    {
                        "description": "Find and link channel names and usernames.",
                        "type": "boolean",
                        "name": "link_names",
                        "in": "formData"
                    },
                    {
                        "description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
                        "type": "string",
                        "name": "icon_url",
                        "in": "formData"
                    },
                    {
                        "description": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    },
                    {
                        "description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
                        "type": "boolean",
                        "name": "reply_broadcast",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "chat"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "chat:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/chat.postMessage",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "chat_postMessage"
            }
        },
        "/users.setActive": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Marks a user as active.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `users:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    }
                ],
                "tags": [
                    "users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/users.setActive",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "users_setActive"
            }
        },
        "/conversations.archive": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.archive method",
                            "title": "conversations.archive error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "method_not_supported_for_channel_type",
                                        "missing_scope",
                                        "not_supported",
                                        "channel_not_found",
                                        "already_archived",
                                        "cant_archive_general",
                                        "restricted_action",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "user_is_bot",
                                        "user_is_restricted",
                                        "user_is_ultra_restricted",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required",
                                        "team_added_to_org",
                                        "missing_charset",
                                        "superfluous_charset"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "channel_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response conversations.archive method",
                            "title": "conversations.archive success schema",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Archives a conversation.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `conversations:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "ID of conversation to archive",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:write",
                            "groups:write",
                            "im:write",
                            "mpim:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.archive",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "conversations_archive"
            }
        },
        "/team.profile.get": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from team.profile.get method",
                            "title": "team.profile.get error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "error": {
                                    "enum": [
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "no_permission",
                                        "user_is_bot",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_typ",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeou",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from team.profile.get method",
                            "title": "team.profile.get success schema",
                            "required": [
                                "ok",
                                "profile"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "profile": {
                                    "additionalProperties": true,
                                    "required": [
                                        "fields"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "fields": {
                                            "minItems": 1,
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/objs_team_profile_field"
                                            }
                                        }
                                    }
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "profile": {
                                    "fields": [
                                        {
                                            "hint": "Enter the extension to reach your desk",
                                            "ordering": 0,
                                            "possible_values": null,
                                            "label": "Phone extension",
                                            "options": null,
                                            "is_hidden": 1,
                                            "type": "text",
                                            "id": "Xf06054AAA"
                                        },
                                        {
                                            "hint": "When you were born",
                                            "ordering": 1,
                                            "possible_values": null,
                                            "label": "Date of birth",
                                            "options": null,
                                            "type": "date",
                                            "id": "Xf06054BBB"
                                        },
                                        {
                                            "hint": "Enter a link to your Facebook profile",
                                            "ordering": 2,
                                            "possible_values": null,
                                            "label": "Facebook",
                                            "options": null,
                                            "type": "link",
                                            "id": "Xf06054CCC"
                                        },
                                        {
                                            "hint": "Hogwarts, obviously",
                                            "ordering": 3,
                                            "possible_values": [
                                                "Gryffindor",
                                                "Hufflepuff",
                                                "Ravenclaw",
                                                "Slytherin"
                                            ],
                                            "label": "House",
                                            "options": null,
                                            "type": "options_list",
                                            "id": "Xf06054DDD"
                                        },
                                        {
                                            "hint": "Office location (LDAP)",
                                            "ordering": 4,
                                            "possible_values": null,
                                            "label": "Location",
                                            "options": {
                                                "is_protected": 1
                                            },
                                            "type": "text",
                                            "id": "Xf06054EEE"
                                        },
                                        {
                                            "hint": "The boss",
                                            "ordering": 5,
                                            "possible_values": null,
                                            "label": "Manager",
                                            "options": null,
                                            "type": "user",
                                            "id": "Xf06054FFF"
                                        }
                                    ]
                                },
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Retrieve a team's profile.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `users.profile:read`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "Filter by visibility.",
                        "type": "string",
                        "name": "visibility",
                        "in": "query"
                    }
                ],
                "tags": [
                    "team.profile",
                    "team"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "users.profile:read"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/team.profile.get",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "team_profile_get"
            }
        },
        "/groups.archive": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Archives a private channel.",
                "parameters": [
                    {
                        "description": "Authentication token. Requires scope: `groups:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Private channel to archive",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "groups"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "groups:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/groups.archive",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "groups_archive"
            }
        },
        "/conversations.replies": {
            "get": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Schema for error response from conversations.replies method",
                            "title": "conversations.replies error schema",
                            "required": [
                                "ok",
                                "error"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "needed": {
                                    "type": "string"
                                },
                                "error": {
                                    "enum": [
                                        "missing_scope",
                                        "channel_not_found",
                                        "thread_not_found",
                                        "not_authed",
                                        "invalid_auth",
                                        "account_inactive",
                                        "invalid_arg_name",
                                        "invalid_array_arg",
                                        "invalid_charset",
                                        "invalid_form_data",
                                        "invalid_post_type",
                                        "missing_post_type",
                                        "team_added_to_org",
                                        "invalid_json",
                                        "json_not_object",
                                        "request_timeout",
                                        "upgrade_required"
                                    ],
                                    "type": "string"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_false"
                                },
                                "provided": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "thread_not_found"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Schema for successful response from conversations.replies method",
                            "title": "conversations.replies success schema",
                            "required": [
                                "ok",
                                "messages"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "has_more": {
                                    "type": "boolean"
                                },
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                },
                                "messages": {
                                    "items": {
                                        "items": [
                                            {
                                                "additionalProperties": false,
                                                "required": [
                                                    "type",
                                                    "user",
                                                    "text",
                                                    "thread_ts",
                                                    "reply_count",
                                                    "replies",
                                                    "subscribed",
                                                    "last_read",
                                                    "unread_count",
                                                    "ts"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "thread_ts": {
                                                        "$ref": "#/definitions/defs_ts"
                                                    },
                                                    "subscribed": {
                                                        "type": "boolean"
                                                    },
                                                    "source_team": {
                                                        "$ref": "#/definitions/defs_team"
                                                    },
                                                    "last_read": {
                                                        "$ref": "#/definitions/defs_ts"
                                                    },
                                                    "user_profile": {
                                                        "$ref": "#/definitions/objs_user_profile_short"
                                                    },
                                                    "text": {
                                                        "type": "string"
                                                    },
                                                    "team": {
                                                        "$ref": "#/definitions/defs_team"
                                                    },
                                                    "ts": {
                                                        "$ref": "#/definitions/defs_ts"
                                                    },
                                                    "unread_count": {
                                                        "type": "integer"
                                                    },
                                                    "reply_count": {
                                                        "type": "integer"
                                                    },
                                                    "user": {
                                                        "$ref": "#/definitions/defs_user"
                                                    },
                                                    "replies": {
                                                        "items": {
                                                            "additionalProperties": false,
                                                            "required": [
                                                                "user",
                                                                "ts"
                                                            ],
                                                            "type": "object",
                                                            "properties": {
                                                                "ts": {
                                                                    "$ref": "#/definitions/defs_ts"
                                                                },
                                                                "user": {
                                                                    "$ref": "#/definitions/defs_user"
                                                                }
                                                            }
                                                        },
                                                        "type": "array"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "user_team": {
                                                        "$ref": "#/definitions/defs_team"
                                                    }
                                                }
                                            },
                                            {
                                                "additionalProperties": false,
                                                "required": [
                                                    "type",
                                                    "user",
                                                    "text",
                                                    "thread_ts",
                                                    "parent_user_id",
                                                    "ts"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "thread_ts": {
                                                        "$ref": "#/definitions/defs_ts"
                                                    },
                                                    "source_team": {
                                                        "$ref": "#/definitions/defs_team"
                                                    },
                                                    "user_profile": {
                                                        "$ref": "#/definitions/objs_user_profile_short"
                                                    },
                                                    "text": {
                                                        "type": "string"
                                                    },
                                                    "ts": {
                                                        "$ref": "#/definitions/defs_ts"
                                                    },
                                                    "user": {
                                                        "$ref": "#/definitions/defs_user"
                                                    },
                                                    "team": {
                                                        "$ref": "#/definitions/defs_team"
                                                    },
                                                    "parent_user_id": {
                                                        "$ref": "#/definitions/defs_user"
                                                    },
                                                    "is_starred": {
                                                        "type": "boolean"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "user_team": {
                                                        "$ref": "#/definitions/defs_team"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "has_more": true,
                                "ok": true,
                                "messages": [
                                    {
                                        "thread_ts": "1482960137.003543",
                                        "last_read": "1484678597.521003",
                                        "subscribed": true,
                                        "text": "island",
                                        "ts": "1482960137.003543",
                                        "unread_count": 0,
                                        "reply_count": 3,
                                        "user": "U061F7AUR",
                                        "replies": [
                                            {
                                                "user": "U061F7AUR",
                                                "ts": "1483037603.017503"
                                            },
                                            {
                                                "user": "U061F7AUR",
                                                "ts": "1483051909.018632"
                                            },
                                            {
                                                "user": "U061F7AUR",
                                                "ts": "1483125339.020269"
                                            }
                                        ],
                                        "type": "message"
                                    },
                                    {
                                        "thread_ts": "1482960137.003543",
                                        "text": "one island",
                                        "ts": "1483037603.017503",
                                        "user": "U061F7AUR",
                                        "parent_user_id": "U061F7AUR",
                                        "type": "message"
                                    },
                                    {
                                        "thread_ts": "1482960137.003543",
                                        "text": "two island",
                                        "ts": "1483051909.018632",
                                        "user": "U061F7AUR",
                                        "parent_user_id": "U061F7AUR",
                                        "type": "message"
                                    },
                                    {
                                        "thread_ts": "1482960137.003543",
                                        "text": "three for the land",
                                        "ts": "1483125339.020269",
                                        "user": "U061F7AUR",
                                        "parent_user_id": "U061F7AUR",
                                        "type": "message"
                                    }
                                ],
                                "response_metadata": {
                                    "next_cursor": "bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx"
                                }
                            }
                        }
                    }
                },
                "description": "Retrieve a thread of messages posted to a conversation",
                "parameters": [
                    {
                        "description": "Unique identifier of a thread's parent message",
                        "type": "number",
                        "name": "ts",
                        "in": "query"
                    },
                    {
                        "description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.",
                        "type": "string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "description": "Authentication token. Requires scope: `conversations:history`",
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Conversation ID to fetch thread from",
                        "type": "string",
                        "name": "channel",
                        "in": "query"
                    }
                ],
                "tags": [
                    "conversations"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "channels:history",
                            "groups:history",
                            "im:history",
                            "mpim:history"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/conversations.replies",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "conversations_replies"
            }
        },
        "/stars.remove": {
            "post": {
                "responses": {
                    "default": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default error template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical error response",
                        "examples": {
                            "application/json": {
                                "ok": false,
                                "error": "invalid_auth"
                            }
                        }
                    },
                    "200": {
                        "schema": {
                            "description": "Verbose schema not yet ready for this method.",
                            "title": "Default success template",
                            "required": [
                                "ok"
                            ],
                            "additionalProperties": true,
                            "type": "object",
                            "properties": {
                                "ok": {
                                    "$ref": "#/definitions/defs_ok_true"
                                }
                            }
                        },
                        "description": "Typical success response",
                        "examples": {
                            "application/json": {
                                "ok": true
                            }
                        }
                    }
                },
                "description": "Removes a star from an item.",
                "parameters": [
                    {
                        "description": "File comment to remove star from.",
                        "type": "string",
                        "name": "file_comment",
                        "in": "formData"
                    },
                    {
                        "description": "Timestamp of the message to remove star from.",
                        "type": "number",
                        "name": "timestamp",
                        "in": "formData"
                    },
                    {
                        "description": "Authentication token. Requires scope: `stars:write`",
                        "type": "string",
                        "name": "token",
                        "in": "header"
                    },
                    {
                        "description": "Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`).",
                        "type": "string",
                        "name": "channel",
                        "in": "formData"
                    },
                    {
                        "description": "File to remove star from.",
                        "type": "string",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "tags": [
                    "stars"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "slackAuth": [
                            "stars:write"
                        ]
                    }
                ],
                "externalDocs": {
                    "url": "https://api.slack.com/methods/stars.remove",
                    "description": "API method documentation"
                },
                "consumes": [
                    "application/x-www-form-urlencoded",
                    "application/json"
                ],
                "operationId": "stars_remove"
            }
        }
    },
    "schemes": [
        "https"
    ],
    "basePath": "/api",
    "securityDefinitions": {
        "slackAuth": {
            "flow": "accessCode",
            "tokenUrl": "https://slack.com/api/oauth.access",
            "type": "oauth2",
            "authorizationUrl": "https://slack.com/oauth/authorize",
            "scopes": {
                "dnd:read": "dnd:read",
                "im:read": "im:read",
                "channels:write": "channels:write",
                "chat:write:user": "chat:write:user",
                "identity.basic": "identity.basic",
                "conversations:write": "conversations:write",
                "groups:write": "groups:write",
                "conversations:history": "conversations:history",
                "reactions:read": "reactions:read",
                "search:read": "search:read",
                "reminders:read": "reminders:read",
                "emoji:read": "emoji:read",
                "mpim:write": "mpim:write",
                "stars:read": "stars:read",
                "users.profile:read": "users.profile:read",
                "pins:write": "pins:write",
                "usergroups:write": "usergroups:write",
                "usergroups:read": "usergroups:read",
                "im:history": "im:history",
                "groups:history": "groups:history",
                "dnd:write": "dnd:write",
                "files:write:user": "files:write:user",
                "files:read": "files:read",
                "mpim:read": "mpim:read",
                "channels:read": "channels:read",
                "links:write": "links:write",
                "conversations:read": "conversations:read",
                "users:write": "users:write",
                "team:read": "team:read",
                "pins:read": "pins:read",
                "none": "No scope required",
                "stars:write": "stars:write",
                "im:write": "im:write",
                "admin": "admin",
                "groups:read": "groups:read",
                "chat:write": "chat:write",
                "bot": "Bot user scope",
                "users.profile:write": "users.profile:write",
                "mpim:history": "mpim:history",
                "reactions:write": "reactions:write",
                "rtm:stream": "rtm:stream",
                "users:read": "users:read",
                "reminders:write": "reminders:write",
                "channels:history": "channels:history"
            }
        }
    },
    "host": "slack.com",
    "definitions": {
        "objs_im": {
            "additionalProperties": true,
            "required": [
                "id",
                "is_im",
                "is_org_shared",
                "user",
                "created",
                "is_user_deleted"
            ],
            "type": "object",
            "properties": {
                "is_org_shared": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "is_user_deleted": {
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/defs_user"
                },
                "is_im": {
                    "type": "boolean"
                },
                "id": {
                    "$ref": "#/definitions/defs_dm_id"
                }
            },
            "title": "IM Object"
        },
        "defs_bot_id": {
            "pattern": "^B[A-Z0-9]{8}$",
            "type": "string",
            "title": "Bot User ID"
        },
        "objs_paging": {
            "additionalProperties": true,
            "required": [
                "count",
                "page",
                "total"
            ],
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                }
            },
            "title": "paging object for files"
        },
        "defs_team": {
            "pattern": "^[T][A-Z0-9]{8}$",
            "type": "string",
            "title": "Team ID"
        },
        "objs_file_object_with_id_only": {
            "additionalProperties": true,
            "title": "file object with ID only",
            "type": "string",
            "$ref": "#/definitions/defs_file_id"
        },
        "defs_ts": {
            "pattern": "^\\d{10}\\.\\d{6}$",
            "type": "string",
            "title": "Timestamp in format 0123456789.012345"
        },
        "objs_file": {
            "additionalProperties": true,
            "type": "object",
            "properties": {
                "image_exif_rotation": {
                    "type": "integer"
                },
                "filetype": {
                    "type": "string"
                },
                "channels": {
                    "additionalProperties": true,
                    "items": {
                        "$ref": "#/definitions/defs_channel_id"
                    },
                    "type": "array"
                },
                "display_as_bot": {
                    "type": "boolean"
                },
                "thumb_64": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "original_h": {
                    "type": "integer"
                },
                "thumb_360_w": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url_private": {
                    "type": "string"
                },
                "thumb_360": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/defs_file_id"
                },
                "ims": {
                    "items": {},
                    "type": "array"
                },
                "thumb_80": {
                    "type": "string"
                },
                "thumb_360_h": {
                    "type": "integer"
                },
                "original_w": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "public_url_shared": {
                    "type": "boolean"
                },
                "editable": {
                    "type": "boolean"
                },
                "thumb_160": {
                    "type": "string"
                },
                "url_private_download": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "groups": {
                    "items": {},
                    "type": "array"
                },
                "is_public": {
                    "type": "boolean"
                },
                "pretty_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "mimetype": {
                    "type": "string"
                },
                "permalink_public": {
                    "type": "string"
                },
                "permalink": {
                    "type": "string"
                },
                "is_external": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "external_type": {
                    "type": "string"
                },
                "comments_count": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                }
            },
            "title": "file object"
        },
        "defs_user": {
            "pattern": "^[UW][A-Z0-9]{8}$",
            "type": "string",
            "title": "User ID"
        },
        "objs_user_profile": {
            "additionalProperties": true,
            "required": [
                "real_name",
                "display_name",
                "avatar_hash",
                "real_name_normalized",
                "display_name_normalized",
                "email",
                "image_24",
                "image_32",
                "image_48",
                "image_72",
                "image_192"
            ],
            "type": "object",
            "properties": {
                "last_name": {
                    "type": "string"
                },
                "status_emoji": {
                    "type": "string"
                },
                "display_name_normalized": {
                    "type": "string"
                },
                "image_32": {
                    "type": "string",
                    "format": "uri"
                },
                "skype": {
                    "type": "string"
                },
                "image_72": {
                    "type": "string",
                    "format": "uri"
                },
                "image_192": {
                    "type": "string",
                    "format": "uri"
                },
                "first_name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "real_name_normalized": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "image_24": {
                    "type": "string",
                    "format": "uri"
                },
                "image_original": {
                    "type": "string",
                    "format": "uri"
                },
                "image_48": {
                    "type": "string",
                    "format": "uri"
                },
                "guest_channels": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "fields": {
                    "type": "object"
                },
                "real_name": {
                    "type": "string"
                },
                "image_512": {
                    "type": "string",
                    "format": "uri"
                },
                "team": {
                    "$ref": "#/definitions/defs_team"
                },
                "avatar_hash": {
                    "type": "string"
                },
                "status_text": {
                    "type": "string"
                }
            },
            "title": "User profile object"
        },
        "defs_room_id": {
            "pattern": "^[R][A-Z0-9]{8}$",
            "type": "string",
            "title": "Room ID for a slack call"
        },
        "defs_channel_id": {
            "pattern": "^[C][A-Z0-9]{8}$",
            "type": "string",
            "title": "Channel ID"
        },
        "defs_channel_name": {
            "type": "string",
            "title": "Name of a channel"
        },
        "objs_comments": {
            "items": {},
            "type": "array",
            "title": "file comments object"
        },
        "defs_dm_id": {
            "pattern": "^[D][A-Z0-9]{8}$",
            "type": "string",
            "title": "Direct Message Channel ID"
        },
        "defs_channel": {
            "pattern": "^[CGD][A-Z0-9]{8}$",
            "type": "string",
            "title": "Channel-like conversation ID"
        },
        "objs_comment": {
            "additionalProperties": true,
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "is_intro": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "title": "File Comment Object"
        },
        "objs_channel": {
            "additionalProperties": true,
            "required": [
                "id",
                "name",
                "created",
                "creator",
                "is_channel",
                "is_org_shared",
                "is_private",
                "is_mpim",
                "is_shared",
                "name_normalized",
                "members",
                "topic",
                "purpose"
            ],
            "type": "object",
            "properties": {
                "is_general": {
                    "type": "boolean"
                },
                "name_normalized": {
                    "type": "string"
                },
                "last_read": {
                    "$ref": "#/definitions/defs_ts"
                },
                "creator": {
                    "$ref": "#/definitions/defs_user"
                },
                "is_member": {
                    "type": "boolean"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "topic": {
                    "additionalProperties": true,
                    "required": [
                        "value",
                        "creator",
                        "last_set"
                    ],
                    "type": "object",
                    "properties": {
                        "last_set": {
                            "type": "integer"
                        },
                        "value": {
                            "type": "string"
                        },
                        "creator": {
                            "$ref": "#/definitions/defs_topic_purpose_creator"
                        }
                    }
                },
                "unread_count_display": {
                    "type": "integer"
                },
                "id": {
                    "$ref": "#/definitions/defs_channel_id"
                },
                "is_org_shared": {
                    "type": "boolean"
                },
                "is_channel": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "is_moved": {
                    "type": "integer"
                },
                "accepted_user": {
                    "$ref": "#/definitions/defs_user"
                },
                "is_pending_ext_shared": {
                    "type": "boolean"
                },
                "is_mpim": {
                    "type": "boolean"
                },
                "is_read_only": {
                    "type": "boolean"
                },
                "purpose": {
                    "additionalProperties": true,
                    "required": [
                        "value",
                        "creator",
                        "last_set"
                    ],
                    "type": "object",
                    "properties": {
                        "last_set": {
                            "type": "integer"
                        },
                        "value": {
                            "type": "string"
                        },
                        "creator": {
                            "$ref": "#/definitions/defs_topic_purpose_creator"
                        }
                    }
                },
                "members": {
                    "minItems": 0,
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs_user"
                    }
                },
                "is_private": {
                    "type": "boolean"
                },
                "previous_names": {
                    "minItems": 0,
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs_channel_name"
                    }
                },
                "num_members": {
                    "type": "integer"
                },
                "is_shared": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "pending_shared": {
                    "minItems": 0,
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs_team"
                    }
                },
                "unread_count": {
                    "type": "integer"
                },
                "unlinked": {
                    "type": "integer",
                    "title": "Field to determine whether a channel has ever been shared/disconnected in the past"
                },
                "latest": {
                    "items": [
                        {
                            "$ref": "#/definitions/objs_message"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "title": "Channel Object"
        },
        "defs_topic_purpose_creator": {
            "pattern": "^[UW][A-Z0-9]{8}$|^$",
            "type": "string",
            "title": "User ID or empty string, used for topic and purpose creation"
        },
        "defs_invite_id": {
            "type": "integer",
            "title": "Invite ID for an external shared channel"
        },
        "defs_file_id": {
            "pattern": "^[F][A-Z0-9]{8}$",
            "type": "string",
            "title": "File ID"
        },
        "defs_group_id": {
            "pattern": "^[G][A-Z0-9]{8}$",
            "type": "string",
            "title": "Private Channel ID"
        },
        "objs_group": {
            "additionalProperties": true,
            "required": [
                "id",
                "name",
                "is_group",
                "created",
                "creator",
                "name_normalized",
                "members",
                "topic",
                "purpose"
            ],
            "type": "object",
            "properties": {
                "is_pending_ext_shared": {
                    "type": "boolean"
                },
                "name_normalized": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "last_read": {
                    "$ref": "#/definitions/defs_ts"
                },
                "creator": {
                    "$ref": "#/definitions/defs_user"
                },
                "is_moved": {
                    "type": "integer"
                },
                "is_mpim": {
                    "type": "boolean"
                },
                "is_archived": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "is_group": {
                    "type": "boolean"
                },
                "topic": {
                    "additionalProperties": true,
                    "required": [
                        "value",
                        "creator",
                        "last_set"
                    ],
                    "type": "object",
                    "properties": {
                        "last_set": {
                            "type": "integer"
                        },
                        "value": {
                            "type": "string"
                        },
                        "creator": {
                            "$ref": "#/definitions/defs_topic_purpose_creator"
                        }
                    }
                },
                "unread_count": {
                    "type": "integer"
                },
                "is_open": {
                    "type": "boolean"
                },
                "purpose": {
                    "additionalProperties": true,
                    "required": [
                        "value",
                        "creator",
                        "last_set"
                    ],
                    "type": "object",
                    "properties": {
                        "last_set": {
                            "type": "integer"
                        },
                        "value": {
                            "type": "string"
                        },
                        "creator": {
                            "$ref": "#/definitions/defs_topic_purpose_creator"
                        }
                    }
                },
                "members": {
                    "minItems": 1,
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/defs_user"
                    }
                },
                "priority": {
                    "type": "integer"
                },
                "latest": {
                    "items": [
                        {
                            "$ref": "#/definitions/objs_message"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "id": {
                    "$ref": "#/definitions/defs_group_id"
                },
                "unread_count_display": {
                    "type": "integer"
                }
            },
            "title": "Group object"
        },
        "defs_ok_false": {
            "enum": [
                false
            ],
            "type": "boolean",
            "title": "default failure response"
        },
        "objs_user_profile_short": {
            "additionalProperties": true,
            "required": [
                "avatar_hash",
                "image_72",
                "first_name",
                "real_name",
                "display_name",
                "team",
                "name",
                "is_restricted",
                "is_ultra_restricted"
            ],
            "type": "object",
            "properties": {
                "first_name": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "display_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "team": {
                    "$ref": "#/definitions/defs_team"
                },
                "real_name": {
                    "type": "string"
                },
                "avatar_hash": {
                    "type": "string"
                },
                "is_ultra_restricted": {
                    "type": "boolean"
                },
                "is_restricted": {
                    "type": "boolean"
                },
                "image_72": {
                    "type": "string",
                    "format": "uri"
                }
            }
        },
        "objs_team_profile_field": {
            "additionalProperties": true,
            "required": [
                "id",
                "ordering",
                "label",
                "hint",
                "type",
                "options"
            ],
            "type": "object",
            "properties": {
                "hint": {
                    "type": "string"
                },
                "ordering": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "text",
                        "date",
                        "link",
                        "mailto",
                        "options_list",
                        "user"
                    ],
                    "type": "string"
                },
                "possible_values": {
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "label": {
                    "type": "string"
                },
                "id": {
                    "pattern": "^X[a-zA-Z0-9]{9}$",
                    "type": "string"
                },
                "is_hidden": {
                    "type": "boolean"
                },
                "field_name": {
                    "type": "string"
                },
                "options": {
                    "type": [
                        "null",
                        "array"
                    ]
                }
            }
        },
        "defs_ok_true": {
            "enum": [
                true
            ],
            "type": "boolean",
            "title": "default success response"
        },
        "objs_conversation": {
            "items": [
                {
                    "additionalProperties": false,
                    "required": [
                        "id",
                        "name",
                        "created",
                        "creator",
                        "is_archived",
                        "is_channel",
                        "is_general",
                        "is_member",
                        "is_mpim",
                        "is_group",
                        "is_org_shared",
                        "is_im",
                        "is_shared",
                        "is_private",
                        "name_normalized",
                        "topic",
                        "purpose"
                    ],
                    "type": "object",
                    "properties": {
                        "is_general": {
                            "type": "boolean"
                        },
                        "name_normalized": {
                            "type": "string"
                        },
                        "last_read": {
                            "$ref": "#/definitions/defs_ts"
                        },
                        "creator": {
                            "$ref": "#/definitions/defs_user"
                        },
                        "is_member": {
                            "type": "boolean"
                        },
                        "is_archived": {
                            "type": "boolean"
                        },
                        "topic": {
                            "additionalProperties": false,
                            "required": [
                                "value",
                                "creator",
                                "last_set"
                            ],
                            "type": "object",
                            "properties": {
                                "last_set": {
                                    "type": "integer"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "creator": {
                                    "$ref": "#/definitions/defs_topic_purpose_creator"
                                }
                            }
                        },
                        "is_open": {
                            "type": "boolean"
                        },
                        "unread_count_display": {
                            "type": "integer"
                        },
                        "is_im": {
                            "type": "boolean"
                        },
                        "id": {
                            "$ref": "#/definitions/defs_channel"
                        },
                        "is_org_shared": {
                            "type": "boolean"
                        },
                        "is_channel": {
                            "type": "boolean"
                        },
                        "user": {
                            "$ref": "#/definitions/defs_user"
                        },
                        "shares": {
                            "minItems": 0,
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "additionalProperties": false,
                                "required": [
                                    "team",
                                    "user",
                                    "accepted_user",
                                    "is_active"
                                ],
                                "type": "object",
                                "properties": {
                                    "accepted_user": {
                                        "$ref": "#/definitions/defs_user"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/defs_user"
                                    },
                                    "team": {
                                        "$ref": "#/definitions/objs_team"
                                    }
                                }
                            }
                        },
                        "is_ext_shared": {
                            "type": "boolean"
                        },
                        "priority": {
                            "type": "integer"
                        },
                        "is_moved": {
                            "type": "integer"
                        },
                        "accepted_user": {
                            "$ref": "#/definitions/defs_user"
                        },
                        "is_pending_ext_shared": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "is_mpim": {
                            "enum": [
                                false
                            ],
                            "type": "boolean"
                        },
                        "is_group": {
                            "type": "boolean"
                        },
                        "is_read_only": {
                            "type": "boolean"
                        },
                        "purpose": {
                            "additionalProperties": false,
                            "required": [
                                "value",
                                "creator",
                                "last_set"
                            ],
                            "type": "object",
                            "properties": {
                                "last_set": {
                                    "type": "integer"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "creator": {
                                    "$ref": "#/definitions/defs_topic_purpose_creator"
                                }
                            }
                        },
                        "pin_count": {
                            "type": "string"
                        },
                        "is_private": {
                            "type": "boolean"
                        },
                        "previous_names": {
                            "minItems": 0,
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/defs_channel_name"
                            }
                        },
                        "num_members": {
                            "type": "integer"
                        },
                        "is_shared": {
                            "type": "boolean"
                        },
                        "created": {
                            "type": "integer"
                        },
                        "timezone_count": {
                            "type": "integer"
                        },
                        "pending_shared": {
                            "minItems": 0,
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/defs_team"
                            }
                        },
                        "unread_count": {
                            "type": "integer"
                        },
                        "unlinked": {
                            "type": "integer",
                            "title": "Field to determine whether a channel has ever been shared/disconnected in the past"
                        },
                        "latest": {
                            "items": [
                                {
                                    "$ref": "#/definitions/objs_message"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "display_counts": {
                            "additionalProperties": false,
                            "required": [
                                "display_counts",
                                "guest_counts"
                            ],
                            "type": "object",
                            "properties": {
                                "guest_counts": {
                                    "type": "integer"
                                },
                                "display_counts": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "title": "Conversation object"
                },
                {
                    "additionalProperties": false,
                    "required": [
                        "id",
                        "name",
                        "created",
                        "creator",
                        "is_archived",
                        "is_channel",
                        "is_general",
                        "is_member",
                        "is_mpim",
                        "is_group",
                        "is_org_shared",
                        "is_im",
                        "is_shared",
                        "is_private",
                        "name_normalized",
                        "topic",
                        "purpose"
                    ],
                    "type": "object",
                    "properties": {
                        "is_general": {
                            "type": "boolean"
                        },
                        "name_normalized": {
                            "type": "string"
                        },
                        "last_read": {
                            "$ref": "#/definitions/defs_ts"
                        },
                        "creator": {
                            "$ref": "#/definitions/defs_user"
                        },
                        "is_member": {
                            "type": "boolean"
                        },
                        "is_archived": {
                            "type": "boolean"
                        },
                        "topic": {
                            "additionalProperties": false,
                            "required": [
                                "value",
                                "creator",
                                "last_set"
                            ],
                            "type": "object",
                            "properties": {
                                "last_set": {
                                    "type": "integer"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "creator": {
                                    "$ref": "#/definitions/defs_topic_purpose_creator"
                                }
                            }
                        },
                        "is_open": {
                            "type": "boolean"
                        },
                        "unread_count_display": {
                            "type": "integer"
                        },
                        "is_im": {
                            "type": "boolean"
                        },
                        "id": {
                            "$ref": "#/definitions/defs_channel"
                        },
                        "is_org_shared": {
                            "type": "boolean"
                        },
                        "is_channel": {
                            "type": "boolean"
                        },
                        "user": {
                            "$ref": "#/definitions/defs_user"
                        },
                        "shares": {
                            "minItems": 0,
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "additionalProperties": false,
                                "required": [
                                    "team",
                                    "user",
                                    "accepted_user",
                                    "is_active"
                                ],
                                "type": "object",
                                "properties": {
                                    "accepted_user": {
                                        "$ref": "#/definitions/defs_user"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "user": {
                                        "$ref": "#/definitions/defs_user"
                                    },
                                    "team": {
                                        "$ref": "#/definitions/objs_team"
                                    }
                                }
                            }
                        },
                        "is_ext_shared": {
                            "type": "boolean"
                        },
                        "priority": {
                            "type": "integer"
                        },
                        "is_moved": {
                            "type": "integer"
                        },
                        "accepted_user": {
                            "$ref": "#/definitions/defs_user"
                        },
                        "is_pending_ext_shared": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "is_mpim": {
                            "enum": [
                                true
                            ],
                            "type": "boolean"
                        },
                        "is_group": {
                            "type": "boolean"
                        },
                        "is_read_only": {
                            "type": "boolean"
                        },
                        "purpose": {
                            "additionalProperties": false,
                            "required": [
                                "value",
                                "creator",
                                "last_set"
                            ],
                            "type": "object",
                            "properties": {
                                "last_set": {
                                    "type": "integer"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "creator": {
                                    "$ref": "#/definitions/defs_topic_purpose_creator"
                                }
                            }
                        },
                        "members": {
                            "minItems": 0,
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/defs_user"
                            }
                        },
                        "pin_count": {
                            "type": "string"
                        },
                        "is_private": {
                            "type": "boolean"
                        },
                        "previous_names": {
                            "minItems": 0,
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/defs_channel_name"
                            }
                        },
                        "num_members": {
                            "type": "integer"
                        },
                        "is_shared": {
                            "type": "boolean"
                        },
                        "created": {
                            "type": "integer"
                        },
                        "timezone_count": {
                            "type": "integer"
                        },
                        "pending_shared": {
                            "minItems": 0,
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/defs_team"
                            }
                        },
                        "unread_count": {
                            "type": "integer"
                        },
                        "unlinked": {
                            "type": "integer",
                            "title": "Field to determine whether a channel has ever been shared/disconnected in the past"
                        },
                        "latest": {
                            "items": [
                                {
                                    "$ref": "#/definitions/objs_message"
                                },
                                {
                                    "type": "null"
                                }
                            ]
                        },
                        "display_counts": {
                            "additionalProperties": false,
                            "required": [
                                "display_counts",
                                "guest_counts"
                            ],
                            "type": "object",
                            "properties": {
                                "guest_counts": {
                                    "type": "integer"
                                },
                                "display_counts": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "title": "Conversation MPIM Object"
                },
                {
                    "additionalProperties": false,
                    "required": [
                        "id",
                        "created",
                        "is_im",
                        "is_org_shared",
                        "user",
                        "is_user_deleted",
                        "priority"
                    ],
                    "type": "object",
                    "properties": {
                        "is_org_shared": {
                            "type": "boolean"
                        },
                        "is_shared": {
                            "type": "boolean"
                        },
                        "created": {
                            "type": "integer"
                        },
                        "is_user_deleted": {
                            "type": "boolean"
                        },
                        "priority": {
                            "type": "integer"
                        },
                        "user": {
                            "$ref": "#/definitions/defs_user"
                        },
                        "id": {
                            "$ref": "#/definitions/defs_dm_id"
                        },
                        "is_im": {
                            "type": "boolean"
                        },
                        "is_ext_shared": {
                            "type": "boolean"
                        }
                    },
                    "title": "Conversation IM Channel Object from conversations.* methods"
                }
            ]
        },
        "objs_team": {
            "additionalProperties": true,
            "required": [
                "domain",
                "email_domain",
                "has_compliance_export",
                "icon",
                "id",
                "name"
            ],
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email_domain": {
                    "type": "string"
                },
                "has_compliance_export": {
                    "type": "boolean"
                },
                "id": {
                    "$ref": "#/definitions/defs_team"
                },
                "icon": {
                    "type": "object",
                    "properties": {
                        "image_230": {
                            "type": "string"
                        },
                        "image_132": {
                            "type": "string"
                        },
                        "image_68": {
                            "type": "string"
                        },
                        "image_34": {
                            "type": "string"
                        },
                        "image_102": {
                            "type": "string"
                        },
                        "image_default": {
                            "type": "boolean"
                        },
                        "image_44": {
                            "type": "string"
                        },
                        "image_88": {
                            "type": "string"
                        }
                    }
                }
            },
            "title": "Team Object"
        },
        "objs_message": {
            "additionalProperties": true,
            "required": [
                "text",
                "type",
                "ts"
            ],
            "type": "object",
            "properties": {
                "attachments": {
                    "minItems": 1,
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "additionalProperties": true,
                        "required": [
                            "id"
                        ],
                        "type": "object",
                        "properties": {
                            "image_bytes": {
                                "type": "integer"
                            },
                            "image_width": {
                                "type": "integer"
                            },
                            "image_height": {
                                "type": "integer"
                            },
                            "image_url": {
                                "type": "string"
                            },
                            "fallback": {
                                "type": "string"
                            },
                            "id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "last_read": {
                    "$ref": "#/definitions/defs_ts"
                },
                "text": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "reply_count": {
                    "type": "integer"
                },
                "replies": {
                    "items": {
                        "additionalProperties": true,
                        "required": [
                            "user",
                            "ts"
                        ],
                        "type": "object",
                        "properties": {
                            "ts": {
                                "$ref": "#/definitions/defs_ts"
                            },
                            "user": {
                                "$ref": "#/definitions/defs_user"
                            }
                        }
                    },
                    "type": "array"
                },
                "user_team": {
                    "$ref": "#/definitions/defs_team"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "icons": {
                    "additionalProperties": true,
                    "type": "object",
                    "properties": {
                        "emoji": {
                            "type": "string"
                        }
                    }
                },
                "purpose": {
                    "type": "string"
                },
                "ts": {
                    "$ref": "#/definitions/defs_ts"
                },
                "subtype": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "source_team": {
                    "$ref": "#/definitions/defs_team"
                },
                "user_profile": {
                    "$ref": "#/definitions/objs_user_profile_short"
                },
                "user": {
                    "$ref": "#/definitions/defs_user"
                },
                "old_name": {
                    "type": "string"
                },
                "thread_ts": {
                    "$ref": "#/definitions/defs_ts"
                },
                "name": {
                    "type": "string"
                },
                "unread_count": {
                    "type": "integer"
                },
                "team": {
                    "$ref": "#/definitions/defs_team"
                },
                "inviter": {
                    "$ref": "#/definitions/defs_user"
                },
                "bot_id": {
                    "$ref": "#/definitions/defs_bot_id"
                }
            },
            "title": "Message object"
        }
    },
    "swagger": "2.0",
    "externalDocs": {
        "url": "https://api.slack.com/web",
        "description": "Learn more about the Slack Web API"
    }
}
